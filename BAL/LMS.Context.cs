//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class HRMSEntities1 : DbContext
    {
        public HRMSEntities1()
            : base("name=HRMSEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AbsenteesCount> AbsenteesCounts { get; set; }
        public DbSet<AcceptAnnouncement> AcceptAnnouncements { get; set; }
        public DbSet<Announcement> Announcements { get; set; }
        public DbSet<AppraisalCycle> AppraisalCycles { get; set; }
        public DbSet<AppraisalInterval> AppraisalIntervals { get; set; }
        public DbSet<AssessmentCriteria> AssessmentCriterias { get; set; }
        public DbSet<AssessmentRevision> AssessmentRevisions { get; set; }
        public DbSet<Date> Dates { get; set; }
        public DbSet<DetailedLeaveStatu> DetailedLeaveStatus { get; set; }
        public DbSet<EmpCertification> EmpCertifications { get; set; }
        public DbSet<EmpDependent> EmpDependents { get; set; }
        public DbSet<EmpDocument> EmpDocuments { get; set; }
        public DbSet<EmpEducation> EmpEducations { get; set; }
        public DbSet<EmpExperience> EmpExperiences { get; set; }
        public DbSet<Employee> Employees { get; set; }
        public DbSet<EmployeeRole> EmployeeRoles { get; set; }
        public DbSet<EmpTechnicalSkill> EmpTechnicalSkills { get; set; }
        public DbSet<Faq> Faqs { get; set; }
        public DbSet<FaqCategory> FaqCategories { get; set; }
        public DbSet<LeaveBalance> LeaveBalances { get; set; }
        public DbSet<LeavesQuota> LeavesQuotas { get; set; }
        public DbSet<LeaveStatu> LeaveStatus { get; set; }
        public DbSet<mobile_app_update_table> mobile_app_update_table { get; set; }
        public DbSet<ModulePermission> ModulePermissions { get; set; }
        public DbSet<PerformanceAppraisal> PerformanceAppraisals { get; set; }
        public DbSet<PerformanceEvaluation> PerformanceEvaluations { get; set; }
        public DbSet<ReminderAlert> ReminderAlerts { get; set; }
        public DbSet<ReminderLeave> ReminderLeaves { get; set; }
        public DbSet<tb_ChangeDesignation> tb_ChangeDesignation { get; set; }
        public DbSet<tb_DocumentType> tb_DocumentType { get; set; }
        public DbSet<tbActionTaken> tbActionTakens { get; set; }
        public DbSet<tbApplicationEvent> tbApplicationEvents { get; set; }
        public DbSet<tbEmailFailureRecord> tbEmailFailureRecords { get; set; }
        public DbSet<tbEmailQueue> tbEmailQueues { get; set; }
        public DbSet<tbEmployeeAddress> tbEmployeeAddresses { get; set; }
        public DbSet<tbEmployeeAppraisalRecord> tbEmployeeAppraisalRecords { get; set; }
        public DbSet<tbEmployeeBankAndPFRecord> tbEmployeeBankAndPFRecords { get; set; }
        public DbSet<tbEmployeeExitRecord> tbEmployeeExitRecords { get; set; }
        public DbSet<tbEmployeeRefrence> tbEmployeeRefrences { get; set; }
        public DbSet<tbEmployeeStatusEvent> tbEmployeeStatusEvents { get; set; }
        public DbSet<tbEmployeeStatusRecord> tbEmployeeStatusRecords { get; set; }
        public DbSet<tbl_AccessCardData> tbl_AccessCardData { get; set; }
        public DbSet<tbl_AccessCardEmployees> tbl_AccessCardEmployees { get; set; }
        public DbSet<tbl_AccessCardEvents> tbl_AccessCardEvents { get; set; }
        public DbSet<tbl_AllEmployeesCustomLeaveReport> tbl_AllEmployeesCustomLeaveReport { get; set; }
        public DbSet<tbl_AllEmployeesLeaveDetails> tbl_AllEmployeesLeaveDetails { get; set; }
        public DbSet<tbl_DI_Geo_States> tbl_DI_Geo_States { get; set; }
        public DbSet<tbl_E_AppraisalRating> tbl_E_AppraisalRating { get; set; }
        public DbSet<tbl_E_Banks> tbl_E_Banks { get; set; }
        public DbSet<tbl_E_BloodGroup> tbl_E_BloodGroup { get; set; }
        public DbSet<tbl_E_CalendarHoliday> tbl_E_CalendarHoliday { get; set; }
        public DbSet<tbl_E_Certification> tbl_E_Certification { get; set; }
        public DbSet<tbl_E_Department> tbl_E_Department { get; set; }
        public DbSet<tbl_E_Designation> tbl_E_Designation { get; set; }
        public DbSet<tbl_E_EmploymentStatus> tbl_E_EmploymentStatus { get; set; }
        public DbSet<tbl_E_EmpType> tbl_E_EmpType { get; set; }
        public DbSet<tbl_E_ExitStatus> tbl_E_ExitStatus { get; set; }
        public DbSet<tbl_E_Grade> tbl_E_Grade { get; set; }
        public DbSet<tbl_E_LeaveType> tbl_E_LeaveType { get; set; }
        public DbSet<tbl_E_Module> tbl_E_Module { get; set; }
        public DbSet<tbl_E_PolicyCategory> tbl_E_PolicyCategory { get; set; }
        public DbSet<tbl_E_Relationship> tbl_E_Relationship { get; set; }
        public DbSet<tbl_E_Role> tbl_E_Role { get; set; }
        public DbSet<tbl_E_Status> tbl_E_Status { get; set; }
        public DbSet<tbl_E_Technicalskills> tbl_E_Technicalskills { get; set; }
        public DbSet<tbl_EmployeeProbationDetails> tbl_EmployeeProbationDetails { get; set; }
        public DbSet<tbl_ExceptionLogger> tbl_ExceptionLogger { get; set; }
        public DbSet<tbl_url> tbl_url { get; set; }
        public DbSet<tbNoticePeriod> tbNoticePeriods { get; set; }
        public DbSet<tbPolicy> tbPolicies { get; set; }
        public DbSet<tbTemplate> tbTemplates { get; set; }
        public DbSet<TL_AcceptEthics> TL_AcceptEthics { get; set; }
        public DbSet<TL_Announcement> TL_Announcement { get; set; }
        public DbSet<TL_AnnouncementAccept> TL_AnnouncementAccept { get; set; }
        public DbSet<TL_Ethics> TL_Ethics { get; set; }
        public DbSet<TL_LateComing> TL_LateComing { get; set; }
        public DbSet<TL_TimeLog> TL_TimeLog { get; set; }
        public DbSet<tbl_H_Employee> tbl_H_Employee { get; set; }
    
        public virtual ObjectResult<Emp_GetAllDepartment_Result> Emp_GetAllDepartment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Emp_GetAllDepartment_Result>("Emp_GetAllDepartment");
        }
    
        public virtual ObjectResult<Emp_GetAllEmployeeDetailsById_Result> Emp_GetAllEmployeeDetailsById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Emp_GetAllEmployeeDetailsById_Result>("Emp_GetAllEmployeeDetailsById", idParameter);
        }
    
        public virtual ObjectResult<Emp_GetAllEmployeeProfile_Result> Emp_GetAllEmployeeProfile()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Emp_GetAllEmployeeProfile_Result>("Emp_GetAllEmployeeProfile");
        }
    
        public virtual ObjectResult<Emp_GetAllEmployeeProfileById_Result> Emp_GetAllEmployeeProfileById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Emp_GetAllEmployeeProfileById_Result>("Emp_GetAllEmployeeProfileById", idParameter);
        }
    
        public virtual int Emp_GetEmployeeLeaves_History(Nullable<int> userid, Nullable<int> fkLeaveType, Nullable<int> lwp)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var fkLeaveTypeParameter = fkLeaveType.HasValue ?
                new ObjectParameter("fkLeaveType", fkLeaveType) :
                new ObjectParameter("fkLeaveType", typeof(int));
    
            var lwpParameter = lwp.HasValue ?
                new ObjectParameter("lwp", lwp) :
                new ObjectParameter("lwp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emp_GetEmployeeLeaves_History", useridParameter, fkLeaveTypeParameter, lwpParameter);
        }
    
        public virtual int Emp_GetEmployeeLeaves_History_LWP(Nullable<int> userid, Nullable<int> lwp)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var lwpParameter = lwp.HasValue ?
                new ObjectParameter("lwp", lwp) :
                new ObjectParameter("lwp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emp_GetEmployeeLeaves_History_LWP", useridParameter, lwpParameter);
        }
    
        public virtual ObjectResult<Emp_GetEmployeeLeavesStatus_Result> Emp_GetEmployeeLeavesStatus(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Emp_GetEmployeeLeavesStatus_Result>("Emp_GetEmployeeLeavesStatus", useridParameter);
        }
    
        public virtual int Emp_GetEmployeePendingLeaves(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emp_GetEmployeePendingLeaves", useridParameter);
        }
    
        public virtual int Emp_GetEmployeePendingLeaves_Probation(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emp_GetEmployeePendingLeaves_Probation", useridParameter);
        }
    
        public virtual int Emp_GetEmployeePendingLeaves_test(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emp_GetEmployeePendingLeaves_test", useridParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> Emp_GetEmployeePendingLeaves_test_AK(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("Emp_GetEmployeePendingLeaves_test_AK", useridParameter);
        }
    
        public virtual int Emp_GetEmployeePendingLeaves_test_bak(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emp_GetEmployeePendingLeaves_test_bak", useridParameter);
        }
    
        public virtual int Emp_GetEmployeePendingLeavesForLeaveapplied(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emp_GetEmployeePendingLeavesForLeaveapplied", useridParameter);
        }
    
        public virtual ObjectResult<Emp_GetUserImagePath_Result> Emp_GetUserImagePath(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Emp_GetUserImagePath_Result>("Emp_GetUserImagePath", useridParameter);
        }
    
        public virtual ObjectResult<Emp_LateComing_Result> Emp_LateComing(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Emp_LateComing_Result>("Emp_LateComing", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<Emp_LateComing_AK_Test_Result> Emp_LateComing_AK_Test(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Emp_LateComing_AK_Test_Result>("Emp_LateComing_AK_Test", fromdateParameter, todateParameter);
        }
    
        public virtual int Emp_LateComing_Details(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emp_LateComing_Details", fromdateParameter, todateParameter);
        }
    
        public virtual int Emp_LateComing_Details_History(Nullable<int> userid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> @return)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var returnParameter = @return.HasValue ?
                new ObjectParameter("return", @return) :
                new ObjectParameter("return", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emp_LateComing_Details_History", useridParameter, fromdateParameter, todateParameter, returnParameter);
        }
    
        public virtual int Emp_LateComing_Details_History_AK_Test(Nullable<int> userid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> @return)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var returnParameter = @return.HasValue ?
                new ObjectParameter("return", @return) :
                new ObjectParameter("return", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emp_LateComing_Details_History_AK_Test", useridParameter, fromdateParameter, todateParameter, returnParameter);
        }
    
        public virtual int Emp_LateComing_Details_History_Cur(Nullable<int> userid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emp_LateComing_Details_History_Cur", useridParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int Emp_LateComing_Details_History_Cur_test(Nullable<int> userid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emp_LateComing_Details_History_Cur_test", useridParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int Emp_LateComing_Details_test(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emp_LateComing_Details_test", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Emp_ProbationStatus(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Emp_ProbationStatus", useridParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Emp_ProbationStatus_withcolname(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Emp_ProbationStatus_withcolname", useridParameter);
        }
    
        public virtual int Emp_TakenAndLeftLeaveDetails(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emp_TakenAndLeftLeaveDetails", useridParameter);
        }
    
        public virtual ObjectResult<GetEmployeeList_Result> GetEmployeeList(Nullable<int> deptid)
        {
            var deptidParameter = deptid.HasValue ?
                new ObjectParameter("Deptid", deptid) :
                new ObjectParameter("Deptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeList_Result>("GetEmployeeList", deptidParameter);
        }
    
        public virtual ObjectResult<GetEmployeeRandomCode_Result> GetEmployeeRandomCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeRandomCode_Result>("GetEmployeeRandomCode");
        }
    
        public virtual ObjectResult<HRMS_AuthenticateUser_Result> HRMS_AuthenticateUser(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_AuthenticateUser_Result>("HRMS_AuthenticateUser", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Hrms_checkedleavestatus(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string emp_id)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var emp_idParameter = emp_id != null ?
                new ObjectParameter("Emp_id", emp_id) :
                new ObjectParameter("Emp_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Hrms_checkedleavestatus", fromdateParameter, todateParameter, emp_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Hrms_checkholidaystatusbydate(Nullable<System.DateTime> today)
        {
            var todayParameter = today.HasValue ?
                new ObjectParameter("today", today) :
                new ObjectParameter("today", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Hrms_checkholidaystatusbydate", todayParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Hrms_checktimelogleavealert(string id, Nullable<System.DateTime> date)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Hrms_checktimelogleavealert", idParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Hrms_CheckTimelogRestriction(string id, Nullable<System.DateTime> date)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Hrms_CheckTimelogRestriction", idParameter, dateParameter);
        }
    
        public virtual int Hrms_deleterow(Nullable<int> iD, string table)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tableParameter = table != null ?
                new ObjectParameter("Table", table) :
                new ObjectParameter("Table", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Hrms_deleterow", iDParameter, tableParameter);
        }
    
        public virtual ObjectResult<Hrms_empanniversariesalert_Result> Hrms_empanniversariesalert(Nullable<System.DateTime> today)
        {
            var todayParameter = today.HasValue ?
                new ObjectParameter("today", today) :
                new ObjectParameter("today", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Hrms_empanniversariesalert_Result>("Hrms_empanniversariesalert", todayParameter);
        }
    
        public virtual ObjectResult<HRMS_EmpBirthdayAlert_Result> HRMS_EmpBirthdayAlert(Nullable<System.DateTime> today)
        {
            var todayParameter = today.HasValue ?
                new ObjectParameter("today", today) :
                new ObjectParameter("today", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_EmpBirthdayAlert_Result>("HRMS_EmpBirthdayAlert", todayParameter);
        }
    
        public virtual int HRMS_EmpBirthdayChart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_EmpBirthdayChart");
        }
    
        public virtual ObjectResult<HRMS_EmpBirthdayMonth_Result> HRMS_EmpBirthdayMonth()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_EmpBirthdayMonth_Result>("HRMS_EmpBirthdayMonth");
        }
    
        public virtual int Hrms_empcertificationinsert(Nullable<int> fkEmployee, Nullable<int> fkCertification, string institution, Nullable<int> passingYear, Nullable<decimal> percentSecured, Nullable<System.DateTime> createdOn, string createdBy, Nullable<System.DateTime> updatedOn, string updatedBy, Nullable<bool> isDeleted)
        {
            var fkEmployeeParameter = fkEmployee.HasValue ?
                new ObjectParameter("fkEmployee", fkEmployee) :
                new ObjectParameter("fkEmployee", typeof(int));
    
            var fkCertificationParameter = fkCertification.HasValue ?
                new ObjectParameter("fkCertification", fkCertification) :
                new ObjectParameter("fkCertification", typeof(int));
    
            var institutionParameter = institution != null ?
                new ObjectParameter("Institution", institution) :
                new ObjectParameter("Institution", typeof(string));
    
            var passingYearParameter = passingYear.HasValue ?
                new ObjectParameter("PassingYear", passingYear) :
                new ObjectParameter("PassingYear", typeof(int));
    
            var percentSecuredParameter = percentSecured.HasValue ?
                new ObjectParameter("PercentSecured", percentSecured) :
                new ObjectParameter("PercentSecured", typeof(decimal));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Hrms_empcertificationinsert", fkEmployeeParameter, fkCertificationParameter, institutionParameter, passingYearParameter, percentSecuredParameter, createdOnParameter, createdByParameter, updatedOnParameter, updatedByParameter, isDeletedParameter);
        }
    
        public virtual int HRMS_EmpCertificationUpdate(Nullable<int> iD, Nullable<int> fkEmployee, Nullable<int> fkCertification, string institution, Nullable<int> passingYear, Nullable<decimal> percentSecured, Nullable<System.DateTime> createdOn, string createdBy, Nullable<System.DateTime> updatedOn, string updatedBy, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fkEmployeeParameter = fkEmployee.HasValue ?
                new ObjectParameter("fkEmployee", fkEmployee) :
                new ObjectParameter("fkEmployee", typeof(int));
    
            var fkCertificationParameter = fkCertification.HasValue ?
                new ObjectParameter("fkCertification", fkCertification) :
                new ObjectParameter("fkCertification", typeof(int));
    
            var institutionParameter = institution != null ?
                new ObjectParameter("Institution", institution) :
                new ObjectParameter("Institution", typeof(string));
    
            var passingYearParameter = passingYear.HasValue ?
                new ObjectParameter("PassingYear", passingYear) :
                new ObjectParameter("PassingYear", typeof(int));
    
            var percentSecuredParameter = percentSecured.HasValue ?
                new ObjectParameter("PercentSecured", percentSecured) :
                new ObjectParameter("PercentSecured", typeof(decimal));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_EmpCertificationUpdate", iDParameter, fkEmployeeParameter, fkCertificationParameter, institutionParameter, passingYearParameter, percentSecuredParameter, createdOnParameter, createdByParameter, updatedOnParameter, updatedByParameter, isDeletedParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Hrms_EmpCheckApplyLeaveStatus(Nullable<System.DateTime> today, Nullable<System.DateTime> from, string empid, Nullable<int> leavetype)
        {
            var todayParameter = today.HasValue ?
                new ObjectParameter("today", today) :
                new ObjectParameter("today", typeof(System.DateTime));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var empidParameter = empid != null ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(string));
    
            var leavetypeParameter = leavetype.HasValue ?
                new ObjectParameter("Leavetype", leavetype) :
                new ObjectParameter("Leavetype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Hrms_EmpCheckApplyLeaveStatus", todayParameter, fromParameter, empidParameter, leavetypeParameter);
        }
    
        public virtual ObjectResult<Hrms_EmpConfirmationAlert_Result> Hrms_EmpConfirmationAlert(Nullable<System.DateTime> today)
        {
            var todayParameter = today.HasValue ?
                new ObjectParameter("today", today) :
                new ObjectParameter("today", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Hrms_EmpConfirmationAlert_Result>("Hrms_EmpConfirmationAlert", todayParameter);
        }
    
        public virtual int Hrms_empdependentinsert(Nullable<int> fkEmployee, string dependentName, Nullable<System.DateTime> dOB, string dependentContactNo, string dependentAddress, Nullable<bool> isNominee, Nullable<bool> isPrimary, Nullable<System.DateTime> createdOn, string createdBy, Nullable<System.DateTime> updatedOn, string updatedBy, Nullable<bool> isDeleted, Nullable<int> fkRelationship)
        {
            var fkEmployeeParameter = fkEmployee.HasValue ?
                new ObjectParameter("fkEmployee", fkEmployee) :
                new ObjectParameter("fkEmployee", typeof(int));
    
            var dependentNameParameter = dependentName != null ?
                new ObjectParameter("DependentName", dependentName) :
                new ObjectParameter("DependentName", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var dependentContactNoParameter = dependentContactNo != null ?
                new ObjectParameter("DependentContactNo", dependentContactNo) :
                new ObjectParameter("DependentContactNo", typeof(string));
    
            var dependentAddressParameter = dependentAddress != null ?
                new ObjectParameter("DependentAddress", dependentAddress) :
                new ObjectParameter("DependentAddress", typeof(string));
    
            var isNomineeParameter = isNominee.HasValue ?
                new ObjectParameter("IsNominee", isNominee) :
                new ObjectParameter("IsNominee", typeof(bool));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var fkRelationshipParameter = fkRelationship.HasValue ?
                new ObjectParameter("fkRelationship", fkRelationship) :
                new ObjectParameter("fkRelationship", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Hrms_empdependentinsert", fkEmployeeParameter, dependentNameParameter, dOBParameter, dependentContactNoParameter, dependentAddressParameter, isNomineeParameter, isPrimaryParameter, createdOnParameter, createdByParameter, updatedOnParameter, updatedByParameter, isDeletedParameter, fkRelationshipParameter);
        }
    
        public virtual int HRMS_EmpDependentUpdate(Nullable<int> iD, Nullable<int> fkEmployee, string dependentName, Nullable<System.DateTime> dOB, string dependentContactNo, string dependentAddress, Nullable<bool> isNominee, Nullable<bool> isPrimary, Nullable<System.DateTime> createdOn, string createdBy, Nullable<System.DateTime> updatedOn, string updatedBy, Nullable<bool> isDeleted, Nullable<int> fkRelationship)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fkEmployeeParameter = fkEmployee.HasValue ?
                new ObjectParameter("fkEmployee", fkEmployee) :
                new ObjectParameter("fkEmployee", typeof(int));
    
            var dependentNameParameter = dependentName != null ?
                new ObjectParameter("DependentName", dependentName) :
                new ObjectParameter("DependentName", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var dependentContactNoParameter = dependentContactNo != null ?
                new ObjectParameter("DependentContactNo", dependentContactNo) :
                new ObjectParameter("DependentContactNo", typeof(string));
    
            var dependentAddressParameter = dependentAddress != null ?
                new ObjectParameter("DependentAddress", dependentAddress) :
                new ObjectParameter("DependentAddress", typeof(string));
    
            var isNomineeParameter = isNominee.HasValue ?
                new ObjectParameter("IsNominee", isNominee) :
                new ObjectParameter("IsNominee", typeof(bool));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var fkRelationshipParameter = fkRelationship.HasValue ?
                new ObjectParameter("fkRelationship", fkRelationship) :
                new ObjectParameter("fkRelationship", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_EmpDependentUpdate", iDParameter, fkEmployeeParameter, dependentNameParameter, dOBParameter, dependentContactNoParameter, dependentAddressParameter, isNomineeParameter, isPrimaryParameter, createdOnParameter, createdByParameter, updatedOnParameter, updatedByParameter, isDeletedParameter, fkRelationshipParameter);
        }
    
        public virtual int HRMS_EmpDocumentInsert(Nullable<int> fkEmployeeID, string title, string imageName)
        {
            var fkEmployeeIDParameter = fkEmployeeID.HasValue ?
                new ObjectParameter("fkEmployeeID", fkEmployeeID) :
                new ObjectParameter("fkEmployeeID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_EmpDocumentInsert", fkEmployeeIDParameter, titleParameter, imageNameParameter);
        }
    
        public virtual int HRMS_EmpExperienceInsert(Nullable<int> fkEmployee, string employer, string jobTitle, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<System.DateTime> createdOn, string createdBy, Nullable<System.DateTime> updatedOn, string updatedBy, Nullable<bool> isDeleted)
        {
            var fkEmployeeParameter = fkEmployee.HasValue ?
                new ObjectParameter("fkEmployee", fkEmployee) :
                new ObjectParameter("fkEmployee", typeof(int));
    
            var employerParameter = employer != null ?
                new ObjectParameter("Employer", employer) :
                new ObjectParameter("Employer", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("JobTitle", jobTitle) :
                new ObjectParameter("JobTitle", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_EmpExperienceInsert", fkEmployeeParameter, employerParameter, jobTitleParameter, fromDateParameter, toDateParameter, createdOnParameter, createdByParameter, updatedOnParameter, updatedByParameter, isDeletedParameter);
        }
    
        public virtual int HRMS_EmpExperienceUpdate(Nullable<int> iD, Nullable<int> fkEmployee, string employer, string jobTitle, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<System.DateTime> createdOn, string createdBy, Nullable<System.DateTime> updatedOn, string updatedBy, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fkEmployeeParameter = fkEmployee.HasValue ?
                new ObjectParameter("fkEmployee", fkEmployee) :
                new ObjectParameter("fkEmployee", typeof(int));
    
            var employerParameter = employer != null ?
                new ObjectParameter("Employer", employer) :
                new ObjectParameter("Employer", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("JobTitle", jobTitle) :
                new ObjectParameter("JobTitle", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_EmpExperienceUpdate", iDParameter, fkEmployeeParameter, employerParameter, jobTitleParameter, fromDateParameter, toDateParameter, createdOnParameter, createdByParameter, updatedOnParameter, updatedByParameter, isDeletedParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_EmployeeDocumentCount(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_EmployeeDocumentCount", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_EmployeeInsert(string emp_Id, string emp_Code, string loginPassword, string fName, string lName, Nullable<System.DateTime> dOJ, Nullable<System.DateTime> dOB, Nullable<int> reportingTo, Nullable<int> projectReportingTo, string emergencyContact, string extNumber, string fatherName, string motherName, string gender, string maritalStatus, string presentAddress, string passportNo, Nullable<System.DateTime> passportExpiry, string permanentAddress, string visaNo, Nullable<System.DateTime> visaExpiry, string salAccNo, string panNo, string homePhone, string mobile1, string mobile2, Nullable<System.DateTime> weddingDate, string personalEmail, string officialEmail, string skypeId, string yahooId, string mSNId, string gtalkId, string sparkId, Nullable<int> fkEmpType, Nullable<int> fkDepartment, Nullable<int> fkDesignation, Nullable<int> fkEmpGrade, string empStatus, string referredBy, string hiringSource, Nullable<System.DateTime> exitDate, string exitComment, Nullable<System.DateTime> createdOn, string createdBy, Nullable<System.DateTime> updatedOn, string updatedBy, Nullable<bool> isDeleted, string appraisalDueOn, Nullable<int> fkBloodGroup, Nullable<int> fkExitStatus, string refName1, string refCompany1, string refDesignation1, string refEmail1, string refContactNo1, string refName2, string refCompany2, string refDesignation2, string refEmail2, string refContactNo2, string refName3, string refCompany3, string refDesignation3, string refEmail3, string refContactNo3, Nullable<bool> isAccessWorkdiary, Nullable<int> fkEmploymentStatus, Nullable<bool> relievingMail)
        {
            var emp_IdParameter = emp_Id != null ?
                new ObjectParameter("Emp_Id", emp_Id) :
                new ObjectParameter("Emp_Id", typeof(string));
    
            var emp_CodeParameter = emp_Code != null ?
                new ObjectParameter("Emp_Code", emp_Code) :
                new ObjectParameter("Emp_Code", typeof(string));
    
            var loginPasswordParameter = loginPassword != null ?
                new ObjectParameter("LoginPassword", loginPassword) :
                new ObjectParameter("LoginPassword", typeof(string));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var dOJParameter = dOJ.HasValue ?
                new ObjectParameter("DOJ", dOJ) :
                new ObjectParameter("DOJ", typeof(System.DateTime));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var reportingToParameter = reportingTo.HasValue ?
                new ObjectParameter("ReportingTo", reportingTo) :
                new ObjectParameter("ReportingTo", typeof(int));
    
            var projectReportingToParameter = projectReportingTo.HasValue ?
                new ObjectParameter("ProjectReportingTo", projectReportingTo) :
                new ObjectParameter("ProjectReportingTo", typeof(int));
    
            var emergencyContactParameter = emergencyContact != null ?
                new ObjectParameter("EmergencyContact", emergencyContact) :
                new ObjectParameter("EmergencyContact", typeof(string));
    
            var extNumberParameter = extNumber != null ?
                new ObjectParameter("ExtNumber", extNumber) :
                new ObjectParameter("ExtNumber", typeof(string));
    
            var fatherNameParameter = fatherName != null ?
                new ObjectParameter("FatherName", fatherName) :
                new ObjectParameter("FatherName", typeof(string));
    
            var motherNameParameter = motherName != null ?
                new ObjectParameter("MotherName", motherName) :
                new ObjectParameter("MotherName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var maritalStatusParameter = maritalStatus != null ?
                new ObjectParameter("MaritalStatus", maritalStatus) :
                new ObjectParameter("MaritalStatus", typeof(string));
    
            var presentAddressParameter = presentAddress != null ?
                new ObjectParameter("PresentAddress", presentAddress) :
                new ObjectParameter("PresentAddress", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var passportExpiryParameter = passportExpiry.HasValue ?
                new ObjectParameter("PassportExpiry", passportExpiry) :
                new ObjectParameter("PassportExpiry", typeof(System.DateTime));
    
            var permanentAddressParameter = permanentAddress != null ?
                new ObjectParameter("PermanentAddress", permanentAddress) :
                new ObjectParameter("PermanentAddress", typeof(string));
    
            var visaNoParameter = visaNo != null ?
                new ObjectParameter("VisaNo", visaNo) :
                new ObjectParameter("VisaNo", typeof(string));
    
            var visaExpiryParameter = visaExpiry.HasValue ?
                new ObjectParameter("VisaExpiry", visaExpiry) :
                new ObjectParameter("VisaExpiry", typeof(System.DateTime));
    
            var salAccNoParameter = salAccNo != null ?
                new ObjectParameter("SalAccNo", salAccNo) :
                new ObjectParameter("SalAccNo", typeof(string));
    
            var panNoParameter = panNo != null ?
                new ObjectParameter("PanNo", panNo) :
                new ObjectParameter("PanNo", typeof(string));
    
            var homePhoneParameter = homePhone != null ?
                new ObjectParameter("HomePhone", homePhone) :
                new ObjectParameter("HomePhone", typeof(string));
    
            var mobile1Parameter = mobile1 != null ?
                new ObjectParameter("Mobile1", mobile1) :
                new ObjectParameter("Mobile1", typeof(string));
    
            var mobile2Parameter = mobile2 != null ?
                new ObjectParameter("Mobile2", mobile2) :
                new ObjectParameter("Mobile2", typeof(string));
    
            var weddingDateParameter = weddingDate.HasValue ?
                new ObjectParameter("WeddingDate", weddingDate) :
                new ObjectParameter("WeddingDate", typeof(System.DateTime));
    
            var personalEmailParameter = personalEmail != null ?
                new ObjectParameter("PersonalEmail", personalEmail) :
                new ObjectParameter("PersonalEmail", typeof(string));
    
            var officialEmailParameter = officialEmail != null ?
                new ObjectParameter("OfficialEmail", officialEmail) :
                new ObjectParameter("OfficialEmail", typeof(string));
    
            var skypeIdParameter = skypeId != null ?
                new ObjectParameter("SkypeId", skypeId) :
                new ObjectParameter("SkypeId", typeof(string));
    
            var yahooIdParameter = yahooId != null ?
                new ObjectParameter("YahooId", yahooId) :
                new ObjectParameter("YahooId", typeof(string));
    
            var mSNIdParameter = mSNId != null ?
                new ObjectParameter("MSNId", mSNId) :
                new ObjectParameter("MSNId", typeof(string));
    
            var gtalkIdParameter = gtalkId != null ?
                new ObjectParameter("GtalkId", gtalkId) :
                new ObjectParameter("GtalkId", typeof(string));
    
            var sparkIdParameter = sparkId != null ?
                new ObjectParameter("SparkId", sparkId) :
                new ObjectParameter("SparkId", typeof(string));
    
            var fkEmpTypeParameter = fkEmpType.HasValue ?
                new ObjectParameter("fkEmpType", fkEmpType) :
                new ObjectParameter("fkEmpType", typeof(int));
    
            var fkDepartmentParameter = fkDepartment.HasValue ?
                new ObjectParameter("fkDepartment", fkDepartment) :
                new ObjectParameter("fkDepartment", typeof(int));
    
            var fkDesignationParameter = fkDesignation.HasValue ?
                new ObjectParameter("fkDesignation", fkDesignation) :
                new ObjectParameter("fkDesignation", typeof(int));
    
            var fkEmpGradeParameter = fkEmpGrade.HasValue ?
                new ObjectParameter("fkEmpGrade", fkEmpGrade) :
                new ObjectParameter("fkEmpGrade", typeof(int));
    
            var empStatusParameter = empStatus != null ?
                new ObjectParameter("EmpStatus", empStatus) :
                new ObjectParameter("EmpStatus", typeof(string));
    
            var referredByParameter = referredBy != null ?
                new ObjectParameter("ReferredBy", referredBy) :
                new ObjectParameter("ReferredBy", typeof(string));
    
            var hiringSourceParameter = hiringSource != null ?
                new ObjectParameter("HiringSource", hiringSource) :
                new ObjectParameter("HiringSource", typeof(string));
    
            var exitDateParameter = exitDate.HasValue ?
                new ObjectParameter("ExitDate", exitDate) :
                new ObjectParameter("ExitDate", typeof(System.DateTime));
    
            var exitCommentParameter = exitComment != null ?
                new ObjectParameter("ExitComment", exitComment) :
                new ObjectParameter("ExitComment", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var appraisalDueOnParameter = appraisalDueOn != null ?
                new ObjectParameter("AppraisalDueOn", appraisalDueOn) :
                new ObjectParameter("AppraisalDueOn", typeof(string));
    
            var fkBloodGroupParameter = fkBloodGroup.HasValue ?
                new ObjectParameter("fkBloodGroup", fkBloodGroup) :
                new ObjectParameter("fkBloodGroup", typeof(int));
    
            var fkExitStatusParameter = fkExitStatus.HasValue ?
                new ObjectParameter("fkExitStatus", fkExitStatus) :
                new ObjectParameter("fkExitStatus", typeof(int));
    
            var refName1Parameter = refName1 != null ?
                new ObjectParameter("RefName1", refName1) :
                new ObjectParameter("RefName1", typeof(string));
    
            var refCompany1Parameter = refCompany1 != null ?
                new ObjectParameter("RefCompany1", refCompany1) :
                new ObjectParameter("RefCompany1", typeof(string));
    
            var refDesignation1Parameter = refDesignation1 != null ?
                new ObjectParameter("RefDesignation1", refDesignation1) :
                new ObjectParameter("RefDesignation1", typeof(string));
    
            var refEmail1Parameter = refEmail1 != null ?
                new ObjectParameter("RefEmail1", refEmail1) :
                new ObjectParameter("RefEmail1", typeof(string));
    
            var refContactNo1Parameter = refContactNo1 != null ?
                new ObjectParameter("RefContactNo1", refContactNo1) :
                new ObjectParameter("RefContactNo1", typeof(string));
    
            var refName2Parameter = refName2 != null ?
                new ObjectParameter("RefName2", refName2) :
                new ObjectParameter("RefName2", typeof(string));
    
            var refCompany2Parameter = refCompany2 != null ?
                new ObjectParameter("RefCompany2", refCompany2) :
                new ObjectParameter("RefCompany2", typeof(string));
    
            var refDesignation2Parameter = refDesignation2 != null ?
                new ObjectParameter("RefDesignation2", refDesignation2) :
                new ObjectParameter("RefDesignation2", typeof(string));
    
            var refEmail2Parameter = refEmail2 != null ?
                new ObjectParameter("RefEmail2", refEmail2) :
                new ObjectParameter("RefEmail2", typeof(string));
    
            var refContactNo2Parameter = refContactNo2 != null ?
                new ObjectParameter("RefContactNo2", refContactNo2) :
                new ObjectParameter("RefContactNo2", typeof(string));
    
            var refName3Parameter = refName3 != null ?
                new ObjectParameter("RefName3", refName3) :
                new ObjectParameter("RefName3", typeof(string));
    
            var refCompany3Parameter = refCompany3 != null ?
                new ObjectParameter("RefCompany3", refCompany3) :
                new ObjectParameter("RefCompany3", typeof(string));
    
            var refDesignation3Parameter = refDesignation3 != null ?
                new ObjectParameter("RefDesignation3", refDesignation3) :
                new ObjectParameter("RefDesignation3", typeof(string));
    
            var refEmail3Parameter = refEmail3 != null ?
                new ObjectParameter("RefEmail3", refEmail3) :
                new ObjectParameter("RefEmail3", typeof(string));
    
            var refContactNo3Parameter = refContactNo3 != null ?
                new ObjectParameter("RefContactNo3", refContactNo3) :
                new ObjectParameter("RefContactNo3", typeof(string));
    
            var isAccessWorkdiaryParameter = isAccessWorkdiary.HasValue ?
                new ObjectParameter("IsAccessWorkdiary", isAccessWorkdiary) :
                new ObjectParameter("IsAccessWorkdiary", typeof(bool));
    
            var fkEmploymentStatusParameter = fkEmploymentStatus.HasValue ?
                new ObjectParameter("fkEmploymentStatus", fkEmploymentStatus) :
                new ObjectParameter("fkEmploymentStatus", typeof(int));
    
            var relievingMailParameter = relievingMail.HasValue ?
                new ObjectParameter("RelievingMail", relievingMail) :
                new ObjectParameter("RelievingMail", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_EmployeeInsert", emp_IdParameter, emp_CodeParameter, loginPasswordParameter, fNameParameter, lNameParameter, dOJParameter, dOBParameter, reportingToParameter, projectReportingToParameter, emergencyContactParameter, extNumberParameter, fatherNameParameter, motherNameParameter, genderParameter, maritalStatusParameter, presentAddressParameter, passportNoParameter, passportExpiryParameter, permanentAddressParameter, visaNoParameter, visaExpiryParameter, salAccNoParameter, panNoParameter, homePhoneParameter, mobile1Parameter, mobile2Parameter, weddingDateParameter, personalEmailParameter, officialEmailParameter, skypeIdParameter, yahooIdParameter, mSNIdParameter, gtalkIdParameter, sparkIdParameter, fkEmpTypeParameter, fkDepartmentParameter, fkDesignationParameter, fkEmpGradeParameter, empStatusParameter, referredByParameter, hiringSourceParameter, exitDateParameter, exitCommentParameter, createdOnParameter, createdByParameter, updatedOnParameter, updatedByParameter, isDeletedParameter, appraisalDueOnParameter, fkBloodGroupParameter, fkExitStatusParameter, refName1Parameter, refCompany1Parameter, refDesignation1Parameter, refEmail1Parameter, refContactNo1Parameter, refName2Parameter, refCompany2Parameter, refDesignation2Parameter, refEmail2Parameter, refContactNo2Parameter, refName3Parameter, refCompany3Parameter, refDesignation3Parameter, refEmail3Parameter, refContactNo3Parameter, isAccessWorkdiaryParameter, fkEmploymentStatusParameter, relievingMailParameter);
        }
    
        public virtual int HRMS_EmployeeRoleInsert(string fkRoles, Nullable<int> fkEmployee)
        {
            var fkRolesParameter = fkRoles != null ?
                new ObjectParameter("fkRoles", fkRoles) :
                new ObjectParameter("fkRoles", typeof(string));
    
            var fkEmployeeParameter = fkEmployee.HasValue ?
                new ObjectParameter("fkEmployee", fkEmployee) :
                new ObjectParameter("fkEmployee", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_EmployeeRoleInsert", fkRolesParameter, fkEmployeeParameter);
        }
    
        public virtual int HRMS_EmployeeUpdate(Nullable<int> iD, string emp_Id, string emp_Code, string loginPassword, string fName, string lName, Nullable<System.DateTime> dOJ, Nullable<System.DateTime> dOB, Nullable<int> reportingTo, Nullable<int> projectReportingTo, string emergencyContact, string extNumber, string fatherName, string motherName, string gender, string maritalStatus, string presentAddress, string passportNo, Nullable<System.DateTime> passportExpiry, string permanentAddress, string visaNo, Nullable<System.DateTime> visaExpiry, string salAccNo, string panNo, string homePhone, string mobile1, string mobile2, Nullable<System.DateTime> weddingDate, string personalEmail, string officialEmail, string skypeId, string yahooId, string mSNId, string gtalkId, string sparkId, Nullable<int> fkEmpType, Nullable<int> fkDepartment, Nullable<int> fkDesignation, Nullable<int> fkEmpGrade, string empStatus, string referredBy, string hiringSource, Nullable<System.DateTime> exitDate, string exitComment, Nullable<System.DateTime> createdOn, string createdBy, Nullable<System.DateTime> updatedOn, string updatedBy, Nullable<bool> isDeleted, string appraisalDueOn, Nullable<int> fkBloodGroup, Nullable<int> fkExitStatus, string refName1, string refCompany1, string refDesignation1, string refEmail1, string refContactNo1, string refName2, string refCompany2, string refDesignation2, string refEmail2, string refContactNo2, string refName3, string refCompany3, string refDesignation3, string refEmail3, string refContactNo3, Nullable<bool> isAccessWorkdiary, Nullable<int> fkEmploymentStatus, Nullable<bool> relievingMail)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var emp_IdParameter = emp_Id != null ?
                new ObjectParameter("Emp_Id", emp_Id) :
                new ObjectParameter("Emp_Id", typeof(string));
    
            var emp_CodeParameter = emp_Code != null ?
                new ObjectParameter("Emp_Code", emp_Code) :
                new ObjectParameter("Emp_Code", typeof(string));
    
            var loginPasswordParameter = loginPassword != null ?
                new ObjectParameter("LoginPassword", loginPassword) :
                new ObjectParameter("LoginPassword", typeof(string));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var dOJParameter = dOJ.HasValue ?
                new ObjectParameter("DOJ", dOJ) :
                new ObjectParameter("DOJ", typeof(System.DateTime));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var reportingToParameter = reportingTo.HasValue ?
                new ObjectParameter("ReportingTo", reportingTo) :
                new ObjectParameter("ReportingTo", typeof(int));
    
            var projectReportingToParameter = projectReportingTo.HasValue ?
                new ObjectParameter("ProjectReportingTo", projectReportingTo) :
                new ObjectParameter("ProjectReportingTo", typeof(int));
    
            var emergencyContactParameter = emergencyContact != null ?
                new ObjectParameter("EmergencyContact", emergencyContact) :
                new ObjectParameter("EmergencyContact", typeof(string));
    
            var extNumberParameter = extNumber != null ?
                new ObjectParameter("ExtNumber", extNumber) :
                new ObjectParameter("ExtNumber", typeof(string));
    
            var fatherNameParameter = fatherName != null ?
                new ObjectParameter("FatherName", fatherName) :
                new ObjectParameter("FatherName", typeof(string));
    
            var motherNameParameter = motherName != null ?
                new ObjectParameter("MotherName", motherName) :
                new ObjectParameter("MotherName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var maritalStatusParameter = maritalStatus != null ?
                new ObjectParameter("MaritalStatus", maritalStatus) :
                new ObjectParameter("MaritalStatus", typeof(string));
    
            var presentAddressParameter = presentAddress != null ?
                new ObjectParameter("PresentAddress", presentAddress) :
                new ObjectParameter("PresentAddress", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var passportExpiryParameter = passportExpiry.HasValue ?
                new ObjectParameter("PassportExpiry", passportExpiry) :
                new ObjectParameter("PassportExpiry", typeof(System.DateTime));
    
            var permanentAddressParameter = permanentAddress != null ?
                new ObjectParameter("PermanentAddress", permanentAddress) :
                new ObjectParameter("PermanentAddress", typeof(string));
    
            var visaNoParameter = visaNo != null ?
                new ObjectParameter("VisaNo", visaNo) :
                new ObjectParameter("VisaNo", typeof(string));
    
            var visaExpiryParameter = visaExpiry.HasValue ?
                new ObjectParameter("VisaExpiry", visaExpiry) :
                new ObjectParameter("VisaExpiry", typeof(System.DateTime));
    
            var salAccNoParameter = salAccNo != null ?
                new ObjectParameter("SalAccNo", salAccNo) :
                new ObjectParameter("SalAccNo", typeof(string));
    
            var panNoParameter = panNo != null ?
                new ObjectParameter("PanNo", panNo) :
                new ObjectParameter("PanNo", typeof(string));
    
            var homePhoneParameter = homePhone != null ?
                new ObjectParameter("HomePhone", homePhone) :
                new ObjectParameter("HomePhone", typeof(string));
    
            var mobile1Parameter = mobile1 != null ?
                new ObjectParameter("Mobile1", mobile1) :
                new ObjectParameter("Mobile1", typeof(string));
    
            var mobile2Parameter = mobile2 != null ?
                new ObjectParameter("Mobile2", mobile2) :
                new ObjectParameter("Mobile2", typeof(string));
    
            var weddingDateParameter = weddingDate.HasValue ?
                new ObjectParameter("WeddingDate", weddingDate) :
                new ObjectParameter("WeddingDate", typeof(System.DateTime));
    
            var personalEmailParameter = personalEmail != null ?
                new ObjectParameter("PersonalEmail", personalEmail) :
                new ObjectParameter("PersonalEmail", typeof(string));
    
            var officialEmailParameter = officialEmail != null ?
                new ObjectParameter("OfficialEmail", officialEmail) :
                new ObjectParameter("OfficialEmail", typeof(string));
    
            var skypeIdParameter = skypeId != null ?
                new ObjectParameter("SkypeId", skypeId) :
                new ObjectParameter("SkypeId", typeof(string));
    
            var yahooIdParameter = yahooId != null ?
                new ObjectParameter("YahooId", yahooId) :
                new ObjectParameter("YahooId", typeof(string));
    
            var mSNIdParameter = mSNId != null ?
                new ObjectParameter("MSNId", mSNId) :
                new ObjectParameter("MSNId", typeof(string));
    
            var gtalkIdParameter = gtalkId != null ?
                new ObjectParameter("GtalkId", gtalkId) :
                new ObjectParameter("GtalkId", typeof(string));
    
            var sparkIdParameter = sparkId != null ?
                new ObjectParameter("SparkId", sparkId) :
                new ObjectParameter("SparkId", typeof(string));
    
            var fkEmpTypeParameter = fkEmpType.HasValue ?
                new ObjectParameter("fkEmpType", fkEmpType) :
                new ObjectParameter("fkEmpType", typeof(int));
    
            var fkDepartmentParameter = fkDepartment.HasValue ?
                new ObjectParameter("fkDepartment", fkDepartment) :
                new ObjectParameter("fkDepartment", typeof(int));
    
            var fkDesignationParameter = fkDesignation.HasValue ?
                new ObjectParameter("fkDesignation", fkDesignation) :
                new ObjectParameter("fkDesignation", typeof(int));
    
            var fkEmpGradeParameter = fkEmpGrade.HasValue ?
                new ObjectParameter("fkEmpGrade", fkEmpGrade) :
                new ObjectParameter("fkEmpGrade", typeof(int));
    
            var empStatusParameter = empStatus != null ?
                new ObjectParameter("EmpStatus", empStatus) :
                new ObjectParameter("EmpStatus", typeof(string));
    
            var referredByParameter = referredBy != null ?
                new ObjectParameter("ReferredBy", referredBy) :
                new ObjectParameter("ReferredBy", typeof(string));
    
            var hiringSourceParameter = hiringSource != null ?
                new ObjectParameter("HiringSource", hiringSource) :
                new ObjectParameter("HiringSource", typeof(string));
    
            var exitDateParameter = exitDate.HasValue ?
                new ObjectParameter("ExitDate", exitDate) :
                new ObjectParameter("ExitDate", typeof(System.DateTime));
    
            var exitCommentParameter = exitComment != null ?
                new ObjectParameter("ExitComment", exitComment) :
                new ObjectParameter("ExitComment", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var appraisalDueOnParameter = appraisalDueOn != null ?
                new ObjectParameter("AppraisalDueOn", appraisalDueOn) :
                new ObjectParameter("AppraisalDueOn", typeof(string));
    
            var fkBloodGroupParameter = fkBloodGroup.HasValue ?
                new ObjectParameter("fkBloodGroup", fkBloodGroup) :
                new ObjectParameter("fkBloodGroup", typeof(int));
    
            var fkExitStatusParameter = fkExitStatus.HasValue ?
                new ObjectParameter("fkExitStatus", fkExitStatus) :
                new ObjectParameter("fkExitStatus", typeof(int));
    
            var refName1Parameter = refName1 != null ?
                new ObjectParameter("RefName1", refName1) :
                new ObjectParameter("RefName1", typeof(string));
    
            var refCompany1Parameter = refCompany1 != null ?
                new ObjectParameter("RefCompany1", refCompany1) :
                new ObjectParameter("RefCompany1", typeof(string));
    
            var refDesignation1Parameter = refDesignation1 != null ?
                new ObjectParameter("RefDesignation1", refDesignation1) :
                new ObjectParameter("RefDesignation1", typeof(string));
    
            var refEmail1Parameter = refEmail1 != null ?
                new ObjectParameter("RefEmail1", refEmail1) :
                new ObjectParameter("RefEmail1", typeof(string));
    
            var refContactNo1Parameter = refContactNo1 != null ?
                new ObjectParameter("RefContactNo1", refContactNo1) :
                new ObjectParameter("RefContactNo1", typeof(string));
    
            var refName2Parameter = refName2 != null ?
                new ObjectParameter("RefName2", refName2) :
                new ObjectParameter("RefName2", typeof(string));
    
            var refCompany2Parameter = refCompany2 != null ?
                new ObjectParameter("RefCompany2", refCompany2) :
                new ObjectParameter("RefCompany2", typeof(string));
    
            var refDesignation2Parameter = refDesignation2 != null ?
                new ObjectParameter("RefDesignation2", refDesignation2) :
                new ObjectParameter("RefDesignation2", typeof(string));
    
            var refEmail2Parameter = refEmail2 != null ?
                new ObjectParameter("RefEmail2", refEmail2) :
                new ObjectParameter("RefEmail2", typeof(string));
    
            var refContactNo2Parameter = refContactNo2 != null ?
                new ObjectParameter("RefContactNo2", refContactNo2) :
                new ObjectParameter("RefContactNo2", typeof(string));
    
            var refName3Parameter = refName3 != null ?
                new ObjectParameter("RefName3", refName3) :
                new ObjectParameter("RefName3", typeof(string));
    
            var refCompany3Parameter = refCompany3 != null ?
                new ObjectParameter("RefCompany3", refCompany3) :
                new ObjectParameter("RefCompany3", typeof(string));
    
            var refDesignation3Parameter = refDesignation3 != null ?
                new ObjectParameter("RefDesignation3", refDesignation3) :
                new ObjectParameter("RefDesignation3", typeof(string));
    
            var refEmail3Parameter = refEmail3 != null ?
                new ObjectParameter("RefEmail3", refEmail3) :
                new ObjectParameter("RefEmail3", typeof(string));
    
            var refContactNo3Parameter = refContactNo3 != null ?
                new ObjectParameter("RefContactNo3", refContactNo3) :
                new ObjectParameter("RefContactNo3", typeof(string));
    
            var isAccessWorkdiaryParameter = isAccessWorkdiary.HasValue ?
                new ObjectParameter("IsAccessWorkdiary", isAccessWorkdiary) :
                new ObjectParameter("IsAccessWorkdiary", typeof(bool));
    
            var fkEmploymentStatusParameter = fkEmploymentStatus.HasValue ?
                new ObjectParameter("fkEmploymentStatus", fkEmploymentStatus) :
                new ObjectParameter("fkEmploymentStatus", typeof(int));
    
            var relievingMailParameter = relievingMail.HasValue ?
                new ObjectParameter("RelievingMail", relievingMail) :
                new ObjectParameter("RelievingMail", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_EmployeeUpdate", iDParameter, emp_IdParameter, emp_CodeParameter, loginPasswordParameter, fNameParameter, lNameParameter, dOJParameter, dOBParameter, reportingToParameter, projectReportingToParameter, emergencyContactParameter, extNumberParameter, fatherNameParameter, motherNameParameter, genderParameter, maritalStatusParameter, presentAddressParameter, passportNoParameter, passportExpiryParameter, permanentAddressParameter, visaNoParameter, visaExpiryParameter, salAccNoParameter, panNoParameter, homePhoneParameter, mobile1Parameter, mobile2Parameter, weddingDateParameter, personalEmailParameter, officialEmailParameter, skypeIdParameter, yahooIdParameter, mSNIdParameter, gtalkIdParameter, sparkIdParameter, fkEmpTypeParameter, fkDepartmentParameter, fkDesignationParameter, fkEmpGradeParameter, empStatusParameter, referredByParameter, hiringSourceParameter, exitDateParameter, exitCommentParameter, createdOnParameter, createdByParameter, updatedOnParameter, updatedByParameter, isDeletedParameter, appraisalDueOnParameter, fkBloodGroupParameter, fkExitStatusParameter, refName1Parameter, refCompany1Parameter, refDesignation1Parameter, refEmail1Parameter, refContactNo1Parameter, refName2Parameter, refCompany2Parameter, refDesignation2Parameter, refEmail2Parameter, refContactNo2Parameter, refName3Parameter, refCompany3Parameter, refDesignation3Parameter, refEmail3Parameter, refContactNo3Parameter, isAccessWorkdiaryParameter, fkEmploymentStatusParameter, relievingMailParameter);
        }
    
        public virtual int HRMS_EmpTechnicalSkillInsert(Nullable<int> fkEmployee, Nullable<int> fkTechnicalSkill, string totalExp, Nullable<int> expertiseLevel, Nullable<System.DateTime> lastUsed, string description, Nullable<System.DateTime> createdOn, string createdBy, Nullable<System.DateTime> updatedOn, string updatedBy, Nullable<bool> isDeleted)
        {
            var fkEmployeeParameter = fkEmployee.HasValue ?
                new ObjectParameter("fkEmployee", fkEmployee) :
                new ObjectParameter("fkEmployee", typeof(int));
    
            var fkTechnicalSkillParameter = fkTechnicalSkill.HasValue ?
                new ObjectParameter("fkTechnicalSkill", fkTechnicalSkill) :
                new ObjectParameter("fkTechnicalSkill", typeof(int));
    
            var totalExpParameter = totalExp != null ?
                new ObjectParameter("TotalExp", totalExp) :
                new ObjectParameter("TotalExp", typeof(string));
    
            var expertiseLevelParameter = expertiseLevel.HasValue ?
                new ObjectParameter("ExpertiseLevel", expertiseLevel) :
                new ObjectParameter("ExpertiseLevel", typeof(int));
    
            var lastUsedParameter = lastUsed.HasValue ?
                new ObjectParameter("LastUsed", lastUsed) :
                new ObjectParameter("LastUsed", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_EmpTechnicalSkillInsert", fkEmployeeParameter, fkTechnicalSkillParameter, totalExpParameter, expertiseLevelParameter, lastUsedParameter, descriptionParameter, createdOnParameter, createdByParameter, updatedOnParameter, updatedByParameter, isDeletedParameter);
        }
    
        public virtual int HRMS_EmpTechnicalSkillUpdate(Nullable<int> iD, Nullable<int> fkEmployee, Nullable<int> fkTechnicalSkill, string totalExp, Nullable<int> expertiseLevel, Nullable<System.DateTime> lastUsed, string description, Nullable<System.DateTime> createdOn, string createdBy, Nullable<System.DateTime> updatedOn, string updatedBy, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fkEmployeeParameter = fkEmployee.HasValue ?
                new ObjectParameter("fkEmployee", fkEmployee) :
                new ObjectParameter("fkEmployee", typeof(int));
    
            var fkTechnicalSkillParameter = fkTechnicalSkill.HasValue ?
                new ObjectParameter("fkTechnicalSkill", fkTechnicalSkill) :
                new ObjectParameter("fkTechnicalSkill", typeof(int));
    
            var totalExpParameter = totalExp != null ?
                new ObjectParameter("TotalExp", totalExp) :
                new ObjectParameter("TotalExp", typeof(string));
    
            var expertiseLevelParameter = expertiseLevel.HasValue ?
                new ObjectParameter("ExpertiseLevel", expertiseLevel) :
                new ObjectParameter("ExpertiseLevel", typeof(int));
    
            var lastUsedParameter = lastUsed.HasValue ?
                new ObjectParameter("LastUsed", lastUsed) :
                new ObjectParameter("LastUsed", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_EmpTechnicalSkillUpdate", iDParameter, fkEmployeeParameter, fkTechnicalSkillParameter, totalExpParameter, expertiseLevelParameter, lastUsedParameter, descriptionParameter, createdOnParameter, createdByParameter, updatedOnParameter, updatedByParameter, isDeletedParameter);
        }
    
        public virtual int HRMS_Get_Top5Leave()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_Get_Top5Leave");
        }
    
        public virtual int HRMS_Get_TopLeaveByDepartment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_Get_TopLeaveByDepartment");
        }
    
        public virtual ObjectResult<HRMS_GetAccessEmployeeByCode_Result> HRMS_GetAccessEmployeeByCode(string code, Nullable<System.DateTime> date)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAccessEmployeeByCode_Result>("HRMS_GetAccessEmployeeByCode", codeParameter, dateParameter);
        }
    
        public virtual ObjectResult<HRMS_GetAccessEmployeeByID_Result> HRMS_GetAccessEmployeeByID(Nullable<System.DateTime> time, string empid)
        {
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.DateTime));
    
            var empidParameter = empid != null ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAccessEmployeeByID_Result>("HRMS_GetAccessEmployeeByID", timeParameter, empidParameter);
        }
    
        public virtual ObjectResult<Hrms_getallabsenteesbydate_Result> Hrms_getallabsenteesbydate(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Hrms_getallabsenteesbydate_Result>("Hrms_getallabsenteesbydate", dateParameter);
        }
    
        public virtual ObjectResult<Hrms_getallappraisaldueonbymonth_Result> Hrms_getallappraisaldueonbymonth(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Hrms_getallappraisaldueonbymonth_Result>("Hrms_getallappraisaldueonbymonth", dateParameter);
        }
    
        public virtual ObjectResult<HRMS_GetAllAppraisalRating_Result> HRMS_GetAllAppraisalRating()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllAppraisalRating_Result>("HRMS_GetAllAppraisalRating");
        }
    
        public virtual ObjectResult<Hrms_getallassignedemployeebyid_Result> Hrms_getallassignedemployeebyid(Nullable<int> fkethics)
        {
            var fkethicsParameter = fkethics.HasValue ?
                new ObjectParameter("fkethics", fkethics) :
                new ObjectParameter("fkethics", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Hrms_getallassignedemployeebyid_Result>("Hrms_getallassignedemployeebyid", fkethicsParameter);
        }
    
        public virtual ObjectResult<HRMS_GetAllBloodGroupType_Result> HRMS_GetAllBloodGroupType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllBloodGroupType_Result>("HRMS_GetAllBloodGroupType");
        }
    
        public virtual ObjectResult<HRMS_GetAllCalendarHoliday_Result> HRMS_GetAllCalendarHoliday(Nullable<int> strYear, Nullable<int> endYear)
        {
            var strYearParameter = strYear.HasValue ?
                new ObjectParameter("StrYear", strYear) :
                new ObjectParameter("StrYear", typeof(int));
    
            var endYearParameter = endYear.HasValue ?
                new ObjectParameter("EndYear", endYear) :
                new ObjectParameter("EndYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllCalendarHoliday_Result>("HRMS_GetAllCalendarHoliday", strYearParameter, endYearParameter);
        }
    
        public virtual ObjectResult<HRMS_GetAllCertification_Result> HRMS_GetAllCertification()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllCertification_Result>("HRMS_GetAllCertification");
        }
    
        public virtual ObjectResult<HRMS_GetAllDepartment_Result> HRMS_GetAllDepartment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllDepartment_Result>("HRMS_GetAllDepartment");
        }
    
        public virtual ObjectResult<HRMS_GetAllDesignation_Result> HRMS_GetAllDesignation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllDesignation_Result>("HRMS_GetAllDesignation");
        }
    
        public virtual ObjectResult<HRMS_GetALLEmpAcceptStatusByAnnID_Result> HRMS_GetALLEmpAcceptStatusByAnnID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetALLEmpAcceptStatusByAnnID_Result>("HRMS_GetALLEmpAcceptStatusByAnnID", idParameter);
        }
    
        public virtual ObjectResult<HRMS_GetALLEmpAcceptStatusByCOEthicsID_Result> HRMS_GetALLEmpAcceptStatusByCOEthicsID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetALLEmpAcceptStatusByCOEthicsID_Result>("HRMS_GetALLEmpAcceptStatusByCOEthicsID", idParameter);
        }
    
        public virtual ObjectResult<HRMS_GetAllEmpDocumentById_Result> HRMS_GetAllEmpDocumentById(Nullable<int> fkEmployeeID)
        {
            var fkEmployeeIDParameter = fkEmployeeID.HasValue ?
                new ObjectParameter("fkEmployeeID", fkEmployeeID) :
                new ObjectParameter("fkEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllEmpDocumentById_Result>("HRMS_GetAllEmpDocumentById", fkEmployeeIDParameter);
        }
    
        public virtual ObjectResult<HRMS_GetAllEmployee_Result> HRMS_GetAllEmployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllEmployee_Result>("HRMS_GetAllEmployee");
        }
    
        public virtual int HRMS_GetAllEmployee_hierarchy()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_GetAllEmployee_hierarchy");
        }
    
        public virtual ObjectResult<HRMS_GetAllEmployeeBySearch_Result> HRMS_GetAllEmployeeBySearch(string empId, string fname, Nullable<int> dsgId, Nullable<int> deptId, Nullable<int> repto, Nullable<int> roleId, Nullable<int> gradeId, string empStatus, Nullable<int> orderBy, Nullable<int> sortBy)
        {
            var empIdParameter = empId != null ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var dsgIdParameter = dsgId.HasValue ?
                new ObjectParameter("DsgId", dsgId) :
                new ObjectParameter("DsgId", typeof(int));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var reptoParameter = repto.HasValue ?
                new ObjectParameter("Repto", repto) :
                new ObjectParameter("Repto", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var gradeIdParameter = gradeId.HasValue ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(int));
    
            var empStatusParameter = empStatus != null ?
                new ObjectParameter("EmpStatus", empStatus) :
                new ObjectParameter("EmpStatus", typeof(string));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllEmployeeBySearch_Result>("HRMS_GetAllEmployeeBySearch", empIdParameter, fnameParameter, dsgIdParameter, deptIdParameter, reptoParameter, roleIdParameter, gradeIdParameter, empStatusParameter, orderByParameter, sortByParameter);
        }
    
        public virtual ObjectResult<HRMS_GetAllEmployeeDetailsById_Result> HRMS_GetAllEmployeeDetailsById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllEmployeeDetailsById_Result>("HRMS_GetAllEmployeeDetailsById", idParameter);
        }
    
        public virtual ObjectResult<Hrms_getallemptimelogstatusbydate_Result> Hrms_getallemptimelogstatusbydate(Nullable<System.DateTime> logindate, Nullable<System.DateTime> logoutdate)
        {
            var logindateParameter = logindate.HasValue ?
                new ObjectParameter("logindate", logindate) :
                new ObjectParameter("logindate", typeof(System.DateTime));
    
            var logoutdateParameter = logoutdate.HasValue ?
                new ObjectParameter("logoutdate", logoutdate) :
                new ObjectParameter("logoutdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Hrms_getallemptimelogstatusbydate_Result>("Hrms_getallemptimelogstatusbydate", logindateParameter, logoutdateParameter);
        }
    
        public virtual ObjectResult<HRMS_GetAllEmpType_Result> HRMS_GetAllEmpType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllEmpType_Result>("HRMS_GetAllEmpType");
        }
    
        public virtual ObjectResult<HRMS_GetAllExitStatusType_Result> HRMS_GetAllExitStatusType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllExitStatusType_Result>("HRMS_GetAllExitStatusType");
        }
    
        public virtual ObjectResult<HRMS_GetAllGrade_Result> HRMS_GetAllGrade()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllGrade_Result>("HRMS_GetAllGrade");
        }
    
        public virtual ObjectResult<HRMS_GetAllHeadCount_Result> HRMS_GetAllHeadCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllHeadCount_Result>("HRMS_GetAllHeadCount");
        }
    
        public virtual ObjectResult<HRMS_GetAllLeaveType_Result> HRMS_GetAllLeaveType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllLeaveType_Result>("HRMS_GetAllLeaveType");
        }
    
        public virtual ObjectResult<HRMS_GetAllModule_Result> HRMS_GetAllModule()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllModule_Result>("HRMS_GetAllModule");
        }
    
        public virtual ObjectResult<Hrms_getallnewjoineebydate_Result> Hrms_getallnewjoineebydate(Nullable<System.DateTime> today)
        {
            var todayParameter = today.HasValue ?
                new ObjectParameter("today", today) :
                new ObjectParameter("today", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Hrms_getallnewjoineebydate_Result>("Hrms_getallnewjoineebydate", todayParameter);
        }
    
        public virtual ObjectResult<HRMS_GetAllRelationship_Result> HRMS_GetAllRelationship()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllRelationship_Result>("HRMS_GetAllRelationship");
        }
    
        public virtual ObjectResult<HRMS_GetAllReportingToByGrade_Result> HRMS_GetAllReportingToByGrade(Nullable<int> grade)
        {
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllReportingToByGrade_Result>("HRMS_GetAllReportingToByGrade", gradeParameter);
        }
    
        public virtual ObjectResult<HRMS_GetAllRole_Result> HRMS_GetAllRole()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllRole_Result>("HRMS_GetAllRole");
        }
    
        public virtual ObjectResult<HRMS_GetAllSkill_Result> HRMS_GetAllSkill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetAllSkill_Result>("HRMS_GetAllSkill");
        }
    
        public virtual ObjectResult<HRMS_GetEmpCertificationById_Result> HRMS_GetEmpCertificationById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetEmpCertificationById_Result>("HRMS_GetEmpCertificationById", iDParameter);
        }
    
        public virtual ObjectResult<string> HRMS_GetEmpCodeById(string emp_Code)
        {
            var emp_CodeParameter = emp_Code != null ?
                new ObjectParameter("Emp_Code", emp_Code) :
                new ObjectParameter("Emp_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HRMS_GetEmpCodeById", emp_CodeParameter);
        }
    
        public virtual ObjectResult<HRMS_GetEmpDependentById_Result> HRMS_GetEmpDependentById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetEmpDependentById_Result>("HRMS_GetEmpDependentById", iDParameter);
        }
    
        public virtual ObjectResult<HRMS_GetEmpEducationById_Result> HRMS_GetEmpEducationById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetEmpEducationById_Result>("HRMS_GetEmpEducationById", iDParameter);
        }
    
        public virtual ObjectResult<HRMS_GetEmpExperienceById_Result> HRMS_GetEmpExperienceById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetEmpExperienceById_Result>("HRMS_GetEmpExperienceById", iDParameter);
        }
    
        public virtual ObjectResult<HRMS_GetEmployeeDetail_Result> HRMS_GetEmployeeDetail(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetEmployeeDetail_Result>("HRMS_GetEmployeeDetail", iDParameter);
        }
    
        public virtual int HRMS_GetEmployeesLeaveDetails(Nullable<int> empId, Nullable<int> deptId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_GetEmployeesLeaveDetails", empIdParameter, deptIdParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int HRMS_GetEmployeesLeaveDetails_Coustom_Report(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> deptId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_GetEmployeesLeaveDetails_Coustom_Report", fromParameter, toParameter, deptIdParameter);
        }
    
        public virtual int HRMS_GetEmployeesLeaveDetails_Coustom_Report_AK_Test(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> deptId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_GetEmployeesLeaveDetails_Coustom_Report_AK_Test", fromParameter, toParameter, deptIdParameter);
        }
    
        public virtual int HRMS_GetEmployeesLeaveDetails_MonthReport(Nullable<int> empId, Nullable<int> deptId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_GetEmployeesLeaveDetails_MonthReport", empIdParameter, deptIdParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int HRMS_GetEmployeesLeaveDetails_MonthReport_AK_Test(Nullable<int> empId, Nullable<int> deptId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_GetEmployeesLeaveDetails_MonthReport_AK_Test", empIdParameter, deptIdParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int Hrms_GetEmpmodulepermissionbyroleid(Nullable<int> role)
        {
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Hrms_GetEmpmodulepermissionbyroleid", roleParameter);
        }
    
        public virtual ObjectResult<HRMS_GetEmpTechnicalSkillById_Result> HRMS_GetEmpTechnicalSkillById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetEmpTechnicalSkillById_Result>("HRMS_GetEmpTechnicalSkillById", iDParameter);
        }
    
        public virtual ObjectResult<HRMS_GetIndividualEmpLoginStatusByDate_Result> HRMS_GetIndividualEmpLoginStatusByDate(string emp_id, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var emp_idParameter = emp_id != null ?
                new ObjectParameter("Emp_id", emp_id) :
                new ObjectParameter("Emp_id", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("Startdate", startdate) :
                new ObjectParameter("Startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("Enddate", enddate) :
                new ObjectParameter("Enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRMS_GetIndividualEmpLoginStatusByDate_Result>("HRMS_GetIndividualEmpLoginStatusByDate", emp_idParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<string> Hrms_getleavereasonbydate(Nullable<System.DateTime> today, string empid)
        {
            var todayParameter = today.HasValue ?
                new ObjectParameter("today", today) :
                new ObjectParameter("today", typeof(System.DateTime));
    
            var empidParameter = empid != null ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Hrms_getleavereasonbydate", todayParameter, empidParameter);
        }
    
        public virtual ObjectResult<Hrms_getmodulepermissionbyroleid_Result> Hrms_getmodulepermissionbyroleid(Nullable<int> role)
        {
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Hrms_getmodulepermissionbyroleid_Result>("Hrms_getmodulepermissionbyroleid", roleParameter);
        }
    
        public virtual ObjectResult<string> HRMS_GetReportingManagerbyEmpid(string emp_id)
        {
            var emp_idParameter = emp_id != null ?
                new ObjectParameter("Emp_id", emp_id) :
                new ObjectParameter("Emp_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HRMS_GetReportingManagerbyEmpid", emp_idParameter);
        }
    
        public virtual int HRMS_GetTotalLeaveByDepartment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_GetTotalLeaveByDepartment");
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_AppraisalRatingInsert(string appraisalMetric)
        {
            var appraisalMetricParameter = appraisalMetric != null ?
                new ObjectParameter("AppraisalMetric", appraisalMetric) :
                new ObjectParameter("AppraisalMetric", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_AppraisalRatingInsert", appraisalMetricParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_AppraisalRatingUpdate(Nullable<int> iD, string appraisalMetric)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var appraisalMetricParameter = appraisalMetric != null ?
                new ObjectParameter("AppraisalMetric", appraisalMetric) :
                new ObjectParameter("AppraisalMetric", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_AppraisalRatingUpdate", iDParameter, appraisalMetricParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_BloodGroupInsert(string description)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_BloodGroupInsert", descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_BloodGroupUpdate(Nullable<int> iD, string description)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_BloodGroupUpdate", iDParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_CalendarHolidayInsert(string occassionName, Nullable<System.DateTime> occassionDate)
        {
            var occassionNameParameter = occassionName != null ?
                new ObjectParameter("OccassionName", occassionName) :
                new ObjectParameter("OccassionName", typeof(string));
    
            var occassionDateParameter = occassionDate.HasValue ?
                new ObjectParameter("OccassionDate", occassionDate) :
                new ObjectParameter("OccassionDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_CalendarHolidayInsert", occassionNameParameter, occassionDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_CalendarHolidayUpdate(Nullable<int> iD, string occassionName, Nullable<System.DateTime> occassionDate)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var occassionNameParameter = occassionName != null ?
                new ObjectParameter("OccassionName", occassionName) :
                new ObjectParameter("OccassionName", typeof(string));
    
            var occassionDateParameter = occassionDate.HasValue ?
                new ObjectParameter("OccassionDate", occassionDate) :
                new ObjectParameter("OccassionDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_CalendarHolidayUpdate", iDParameter, occassionNameParameter, occassionDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_CertificationInsert(string description)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_CertificationInsert", descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_CertificationUpdate(Nullable<int> iD, string description)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_CertificationUpdate", iDParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_DepartmentInsert(string deptName, string deptHead)
        {
            var deptNameParameter = deptName != null ?
                new ObjectParameter("DeptName", deptName) :
                new ObjectParameter("DeptName", typeof(string));
    
            var deptHeadParameter = deptHead != null ?
                new ObjectParameter("DeptHead", deptHead) :
                new ObjectParameter("DeptHead", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_DepartmentInsert", deptNameParameter, deptHeadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_DepartmentUpdate(Nullable<int> iD, string deptName, string deptHead)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var deptNameParameter = deptName != null ?
                new ObjectParameter("DeptName", deptName) :
                new ObjectParameter("DeptName", typeof(string));
    
            var deptHeadParameter = deptHead != null ?
                new ObjectParameter("DeptHead", deptHead) :
                new ObjectParameter("DeptHead", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_DepartmentUpdate", iDParameter, deptNameParameter, deptHeadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_DesignationInsert(string description)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_DesignationInsert", descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_DesignationUpdate(Nullable<int> iD, string description)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_DesignationUpdate", iDParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_EmpTypeInsert(string description)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_EmpTypeInsert", descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_EmpTypeUpdate(Nullable<int> iD, string description)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_EmpTypeUpdate", iDParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_ExitStatusInsert(string description)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_ExitStatusInsert", descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_ExitStatusUpdate(Nullable<int> iD, string description)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_ExitStatusUpdate", iDParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_GradeInsert(string description)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_GradeInsert", descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_GradeUpdate(Nullable<int> iD, string description)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_GradeUpdate", iDParameter, descriptionParameter);
        }
    
        public virtual int HRMS_tbl_E_LeaveTypeInsert(string description)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_tbl_E_LeaveTypeInsert", descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_LeaveTypeUpdate(Nullable<int> iD, string description)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_LeaveTypeUpdate", iDParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_ModuleInsert(string description)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_ModuleInsert", descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_ModuleUpdate(Nullable<int> iD, string description)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_ModuleUpdate", iDParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_RelationshipInsert(string description)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_RelationshipInsert", descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_RelationshipUpdate(Nullable<int> iD, string description)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_RelationshipUpdate", iDParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_RoleInsert(string roleName)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_RoleInsert", roleNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_RoleUpdate(Nullable<int> iD, string roleName)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_RoleUpdate", iDParameter, roleNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_TechnicalSkillsInsert(string description)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_TechnicalSkillsInsert", descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HRMS_tbl_E_TechnicalSkillsUpdate(Nullable<int> iD, string description)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HRMS_tbl_E_TechnicalSkillsUpdate", iDParameter, descriptionParameter);
        }
    
        public virtual int HRMS_Top5EmployeeByDepartmentId(Nullable<int> depId)
        {
            var depIdParameter = depId.HasValue ?
                new ObjectParameter("DepId", depId) :
                new ObjectParameter("DepId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRMS_Top5EmployeeByDepartmentId", depIdParameter);
        }
    
        public virtual int Leaveapplied(Nullable<int> id, string emp_id, Nullable<int> fkLeaveType, string department, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string leaveReason, string firstLineManager_id, Nullable<int> firstLineManagerStatus, string firstLineMangerComment, string secondLineManager_id, Nullable<int> secondLineManagerStatus, string secondLineManagerComment, string hr_id, string hr_Comment, Nullable<int> hr_Status, Nullable<int> empLeaveStatus, Nullable<System.DateTime> leaveAppliedDate, Nullable<System.DateTime> createdOn, string createdBy, Nullable<System.DateTime> updatedOn, string updatedBy, string admin_id, string admin_Comment, Nullable<System.DateTime> fLDecisiondate, Nullable<System.DateTime> sLDecisiondate, Nullable<System.DateTime> hRRDecisiondate, Nullable<bool> isHalfDay, Nullable<bool> isProbationLeave, Nullable<bool> isLWP, Nullable<decimal> eLC, Nullable<bool> isELCFlag)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var emp_idParameter = emp_id != null ?
                new ObjectParameter("Emp_id", emp_id) :
                new ObjectParameter("Emp_id", typeof(string));
    
            var fkLeaveTypeParameter = fkLeaveType.HasValue ?
                new ObjectParameter("fkLeaveType", fkLeaveType) :
                new ObjectParameter("fkLeaveType", typeof(int));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var leaveReasonParameter = leaveReason != null ?
                new ObjectParameter("LeaveReason", leaveReason) :
                new ObjectParameter("LeaveReason", typeof(string));
    
            var firstLineManager_idParameter = firstLineManager_id != null ?
                new ObjectParameter("FirstLineManager_id", firstLineManager_id) :
                new ObjectParameter("FirstLineManager_id", typeof(string));
    
            var firstLineManagerStatusParameter = firstLineManagerStatus.HasValue ?
                new ObjectParameter("FirstLineManagerStatus", firstLineManagerStatus) :
                new ObjectParameter("FirstLineManagerStatus", typeof(int));
    
            var firstLineMangerCommentParameter = firstLineMangerComment != null ?
                new ObjectParameter("FirstLineMangerComment", firstLineMangerComment) :
                new ObjectParameter("FirstLineMangerComment", typeof(string));
    
            var secondLineManager_idParameter = secondLineManager_id != null ?
                new ObjectParameter("SecondLineManager_id", secondLineManager_id) :
                new ObjectParameter("SecondLineManager_id", typeof(string));
    
            var secondLineManagerStatusParameter = secondLineManagerStatus.HasValue ?
                new ObjectParameter("SecondLineManagerStatus", secondLineManagerStatus) :
                new ObjectParameter("SecondLineManagerStatus", typeof(int));
    
            var secondLineManagerCommentParameter = secondLineManagerComment != null ?
                new ObjectParameter("SecondLineManagerComment", secondLineManagerComment) :
                new ObjectParameter("SecondLineManagerComment", typeof(string));
    
            var hr_idParameter = hr_id != null ?
                new ObjectParameter("Hr_id", hr_id) :
                new ObjectParameter("Hr_id", typeof(string));
    
            var hr_CommentParameter = hr_Comment != null ?
                new ObjectParameter("Hr_Comment", hr_Comment) :
                new ObjectParameter("Hr_Comment", typeof(string));
    
            var hr_StatusParameter = hr_Status.HasValue ?
                new ObjectParameter("Hr_Status", hr_Status) :
                new ObjectParameter("Hr_Status", typeof(int));
    
            var empLeaveStatusParameter = empLeaveStatus.HasValue ?
                new ObjectParameter("EmpLeaveStatus", empLeaveStatus) :
                new ObjectParameter("EmpLeaveStatus", typeof(int));
    
            var leaveAppliedDateParameter = leaveAppliedDate.HasValue ?
                new ObjectParameter("LeaveAppliedDate", leaveAppliedDate) :
                new ObjectParameter("LeaveAppliedDate", typeof(System.DateTime));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var admin_idParameter = admin_id != null ?
                new ObjectParameter("Admin_id", admin_id) :
                new ObjectParameter("Admin_id", typeof(string));
    
            var admin_CommentParameter = admin_Comment != null ?
                new ObjectParameter("Admin_Comment", admin_Comment) :
                new ObjectParameter("Admin_Comment", typeof(string));
    
            var fLDecisiondateParameter = fLDecisiondate.HasValue ?
                new ObjectParameter("FLDecisiondate", fLDecisiondate) :
                new ObjectParameter("FLDecisiondate", typeof(System.DateTime));
    
            var sLDecisiondateParameter = sLDecisiondate.HasValue ?
                new ObjectParameter("SLDecisiondate", sLDecisiondate) :
                new ObjectParameter("SLDecisiondate", typeof(System.DateTime));
    
            var hRRDecisiondateParameter = hRRDecisiondate.HasValue ?
                new ObjectParameter("HRRDecisiondate", hRRDecisiondate) :
                new ObjectParameter("HRRDecisiondate", typeof(System.DateTime));
    
            var isHalfDayParameter = isHalfDay.HasValue ?
                new ObjectParameter("IsHalfDay", isHalfDay) :
                new ObjectParameter("IsHalfDay", typeof(bool));
    
            var isProbationLeaveParameter = isProbationLeave.HasValue ?
                new ObjectParameter("IsProbationLeave", isProbationLeave) :
                new ObjectParameter("IsProbationLeave", typeof(bool));
    
            var isLWPParameter = isLWP.HasValue ?
                new ObjectParameter("IsLWP", isLWP) :
                new ObjectParameter("IsLWP", typeof(bool));
    
            var eLCParameter = eLC.HasValue ?
                new ObjectParameter("ELC", eLC) :
                new ObjectParameter("ELC", typeof(decimal));
    
            var isELCFlagParameter = isELCFlag.HasValue ?
                new ObjectParameter("IsELCFlag", isELCFlag) :
                new ObjectParameter("IsELCFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Leaveapplied", idParameter, emp_idParameter, fkLeaveTypeParameter, departmentParameter, fromDateParameter, toDateParameter, leaveReasonParameter, firstLineManager_idParameter, firstLineManagerStatusParameter, firstLineMangerCommentParameter, secondLineManager_idParameter, secondLineManagerStatusParameter, secondLineManagerCommentParameter, hr_idParameter, hr_CommentParameter, hr_StatusParameter, empLeaveStatusParameter, leaveAppliedDateParameter, createdOnParameter, createdByParameter, updatedOnParameter, updatedByParameter, admin_idParameter, admin_CommentParameter, fLDecisiondateParameter, sLDecisiondateParameter, hRRDecisiondateParameter, isHalfDayParameter, isProbationLeaveParameter, isLWPParameter, eLCParameter, isELCFlagParameter);
        }
    
        public virtual ObjectResult<string> Leaveapplied_AK(Nullable<int> id, string emp_id, Nullable<int> fkLeaveType, string department, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string leaveReason, string firstLineManager_id, Nullable<int> firstLineManagerStatus, string firstLineMangerComment, string secondLineManager_id, Nullable<int> secondLineManagerStatus, string secondLineManagerComment, string hr_id, string hr_Comment, Nullable<int> hr_Status, Nullable<int> empLeaveStatus, Nullable<System.DateTime> leaveAppliedDate, Nullable<System.DateTime> createdOn, string createdBy, Nullable<System.DateTime> updatedOn, string updatedBy, string admin_id, string admin_Comment, Nullable<System.DateTime> fLDecisiondate, Nullable<System.DateTime> sLDecisiondate, Nullable<System.DateTime> hRRDecisiondate, Nullable<bool> isHalfDay, Nullable<bool> isProbationLeave, Nullable<bool> isLWP, Nullable<decimal> eLC, Nullable<bool> isELCFlag)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var emp_idParameter = emp_id != null ?
                new ObjectParameter("Emp_id", emp_id) :
                new ObjectParameter("Emp_id", typeof(string));
    
            var fkLeaveTypeParameter = fkLeaveType.HasValue ?
                new ObjectParameter("fkLeaveType", fkLeaveType) :
                new ObjectParameter("fkLeaveType", typeof(int));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var leaveReasonParameter = leaveReason != null ?
                new ObjectParameter("LeaveReason", leaveReason) :
                new ObjectParameter("LeaveReason", typeof(string));
    
            var firstLineManager_idParameter = firstLineManager_id != null ?
                new ObjectParameter("FirstLineManager_id", firstLineManager_id) :
                new ObjectParameter("FirstLineManager_id", typeof(string));
    
            var firstLineManagerStatusParameter = firstLineManagerStatus.HasValue ?
                new ObjectParameter("FirstLineManagerStatus", firstLineManagerStatus) :
                new ObjectParameter("FirstLineManagerStatus", typeof(int));
    
            var firstLineMangerCommentParameter = firstLineMangerComment != null ?
                new ObjectParameter("FirstLineMangerComment", firstLineMangerComment) :
                new ObjectParameter("FirstLineMangerComment", typeof(string));
    
            var secondLineManager_idParameter = secondLineManager_id != null ?
                new ObjectParameter("SecondLineManager_id", secondLineManager_id) :
                new ObjectParameter("SecondLineManager_id", typeof(string));
    
            var secondLineManagerStatusParameter = secondLineManagerStatus.HasValue ?
                new ObjectParameter("SecondLineManagerStatus", secondLineManagerStatus) :
                new ObjectParameter("SecondLineManagerStatus", typeof(int));
    
            var secondLineManagerCommentParameter = secondLineManagerComment != null ?
                new ObjectParameter("SecondLineManagerComment", secondLineManagerComment) :
                new ObjectParameter("SecondLineManagerComment", typeof(string));
    
            var hr_idParameter = hr_id != null ?
                new ObjectParameter("Hr_id", hr_id) :
                new ObjectParameter("Hr_id", typeof(string));
    
            var hr_CommentParameter = hr_Comment != null ?
                new ObjectParameter("Hr_Comment", hr_Comment) :
                new ObjectParameter("Hr_Comment", typeof(string));
    
            var hr_StatusParameter = hr_Status.HasValue ?
                new ObjectParameter("Hr_Status", hr_Status) :
                new ObjectParameter("Hr_Status", typeof(int));
    
            var empLeaveStatusParameter = empLeaveStatus.HasValue ?
                new ObjectParameter("EmpLeaveStatus", empLeaveStatus) :
                new ObjectParameter("EmpLeaveStatus", typeof(int));
    
            var leaveAppliedDateParameter = leaveAppliedDate.HasValue ?
                new ObjectParameter("LeaveAppliedDate", leaveAppliedDate) :
                new ObjectParameter("LeaveAppliedDate", typeof(System.DateTime));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var admin_idParameter = admin_id != null ?
                new ObjectParameter("Admin_id", admin_id) :
                new ObjectParameter("Admin_id", typeof(string));
    
            var admin_CommentParameter = admin_Comment != null ?
                new ObjectParameter("Admin_Comment", admin_Comment) :
                new ObjectParameter("Admin_Comment", typeof(string));
    
            var fLDecisiondateParameter = fLDecisiondate.HasValue ?
                new ObjectParameter("FLDecisiondate", fLDecisiondate) :
                new ObjectParameter("FLDecisiondate", typeof(System.DateTime));
    
            var sLDecisiondateParameter = sLDecisiondate.HasValue ?
                new ObjectParameter("SLDecisiondate", sLDecisiondate) :
                new ObjectParameter("SLDecisiondate", typeof(System.DateTime));
    
            var hRRDecisiondateParameter = hRRDecisiondate.HasValue ?
                new ObjectParameter("HRRDecisiondate", hRRDecisiondate) :
                new ObjectParameter("HRRDecisiondate", typeof(System.DateTime));
    
            var isHalfDayParameter = isHalfDay.HasValue ?
                new ObjectParameter("IsHalfDay", isHalfDay) :
                new ObjectParameter("IsHalfDay", typeof(bool));
    
            var isProbationLeaveParameter = isProbationLeave.HasValue ?
                new ObjectParameter("IsProbationLeave", isProbationLeave) :
                new ObjectParameter("IsProbationLeave", typeof(bool));
    
            var isLWPParameter = isLWP.HasValue ?
                new ObjectParameter("IsLWP", isLWP) :
                new ObjectParameter("IsLWP", typeof(bool));
    
            var eLCParameter = eLC.HasValue ?
                new ObjectParameter("ELC", eLC) :
                new ObjectParameter("ELC", typeof(decimal));
    
            var isELCFlagParameter = isELCFlag.HasValue ?
                new ObjectParameter("IsELCFlag", isELCFlag) :
                new ObjectParameter("IsELCFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Leaveapplied_AK", idParameter, emp_idParameter, fkLeaveTypeParameter, departmentParameter, fromDateParameter, toDateParameter, leaveReasonParameter, firstLineManager_idParameter, firstLineManagerStatusParameter, firstLineMangerCommentParameter, secondLineManager_idParameter, secondLineManagerStatusParameter, secondLineManagerCommentParameter, hr_idParameter, hr_CommentParameter, hr_StatusParameter, empLeaveStatusParameter, leaveAppliedDateParameter, createdOnParameter, createdByParameter, updatedOnParameter, updatedByParameter, admin_idParameter, admin_CommentParameter, fLDecisiondateParameter, sLDecisiondateParameter, hRRDecisiondateParameter, isHalfDayParameter, isProbationLeaveParameter, isLWPParameter, eLCParameter, isELCFlagParameter);
        }
    
        public virtual ObjectResult<string> Leaveapplied_AK_Test(Nullable<int> id, string emp_id, Nullable<int> fkLeaveType, string department, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string leaveReason, string firstLineManager_id, Nullable<int> firstLineManagerStatus, string firstLineMangerComment, string secondLineManager_id, Nullable<int> secondLineManagerStatus, string secondLineManagerComment, string hr_id, string hr_Comment, Nullable<int> hr_Status, Nullable<int> empLeaveStatus, Nullable<System.DateTime> leaveAppliedDate, Nullable<System.DateTime> createdOn, string createdBy, Nullable<System.DateTime> updatedOn, string updatedBy, string admin_id, string admin_Comment, Nullable<System.DateTime> fLDecisiondate, Nullable<System.DateTime> sLDecisiondate, Nullable<System.DateTime> hRRDecisiondate, Nullable<bool> isHalfDay, Nullable<bool> isProbationLeave, Nullable<bool> isLWP, Nullable<decimal> eLC, Nullable<bool> isELCFlag)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var emp_idParameter = emp_id != null ?
                new ObjectParameter("Emp_id", emp_id) :
                new ObjectParameter("Emp_id", typeof(string));
    
            var fkLeaveTypeParameter = fkLeaveType.HasValue ?
                new ObjectParameter("fkLeaveType", fkLeaveType) :
                new ObjectParameter("fkLeaveType", typeof(int));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var leaveReasonParameter = leaveReason != null ?
                new ObjectParameter("LeaveReason", leaveReason) :
                new ObjectParameter("LeaveReason", typeof(string));
    
            var firstLineManager_idParameter = firstLineManager_id != null ?
                new ObjectParameter("FirstLineManager_id", firstLineManager_id) :
                new ObjectParameter("FirstLineManager_id", typeof(string));
    
            var firstLineManagerStatusParameter = firstLineManagerStatus.HasValue ?
                new ObjectParameter("FirstLineManagerStatus", firstLineManagerStatus) :
                new ObjectParameter("FirstLineManagerStatus", typeof(int));
    
            var firstLineMangerCommentParameter = firstLineMangerComment != null ?
                new ObjectParameter("FirstLineMangerComment", firstLineMangerComment) :
                new ObjectParameter("FirstLineMangerComment", typeof(string));
    
            var secondLineManager_idParameter = secondLineManager_id != null ?
                new ObjectParameter("SecondLineManager_id", secondLineManager_id) :
                new ObjectParameter("SecondLineManager_id", typeof(string));
    
            var secondLineManagerStatusParameter = secondLineManagerStatus.HasValue ?
                new ObjectParameter("SecondLineManagerStatus", secondLineManagerStatus) :
                new ObjectParameter("SecondLineManagerStatus", typeof(int));
    
            var secondLineManagerCommentParameter = secondLineManagerComment != null ?
                new ObjectParameter("SecondLineManagerComment", secondLineManagerComment) :
                new ObjectParameter("SecondLineManagerComment", typeof(string));
    
            var hr_idParameter = hr_id != null ?
                new ObjectParameter("Hr_id", hr_id) :
                new ObjectParameter("Hr_id", typeof(string));
    
            var hr_CommentParameter = hr_Comment != null ?
                new ObjectParameter("Hr_Comment", hr_Comment) :
                new ObjectParameter("Hr_Comment", typeof(string));
    
            var hr_StatusParameter = hr_Status.HasValue ?
                new ObjectParameter("Hr_Status", hr_Status) :
                new ObjectParameter("Hr_Status", typeof(int));
    
            var empLeaveStatusParameter = empLeaveStatus.HasValue ?
                new ObjectParameter("EmpLeaveStatus", empLeaveStatus) :
                new ObjectParameter("EmpLeaveStatus", typeof(int));
    
            var leaveAppliedDateParameter = leaveAppliedDate.HasValue ?
                new ObjectParameter("LeaveAppliedDate", leaveAppliedDate) :
                new ObjectParameter("LeaveAppliedDate", typeof(System.DateTime));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var admin_idParameter = admin_id != null ?
                new ObjectParameter("Admin_id", admin_id) :
                new ObjectParameter("Admin_id", typeof(string));
    
            var admin_CommentParameter = admin_Comment != null ?
                new ObjectParameter("Admin_Comment", admin_Comment) :
                new ObjectParameter("Admin_Comment", typeof(string));
    
            var fLDecisiondateParameter = fLDecisiondate.HasValue ?
                new ObjectParameter("FLDecisiondate", fLDecisiondate) :
                new ObjectParameter("FLDecisiondate", typeof(System.DateTime));
    
            var sLDecisiondateParameter = sLDecisiondate.HasValue ?
                new ObjectParameter("SLDecisiondate", sLDecisiondate) :
                new ObjectParameter("SLDecisiondate", typeof(System.DateTime));
    
            var hRRDecisiondateParameter = hRRDecisiondate.HasValue ?
                new ObjectParameter("HRRDecisiondate", hRRDecisiondate) :
                new ObjectParameter("HRRDecisiondate", typeof(System.DateTime));
    
            var isHalfDayParameter = isHalfDay.HasValue ?
                new ObjectParameter("IsHalfDay", isHalfDay) :
                new ObjectParameter("IsHalfDay", typeof(bool));
    
            var isProbationLeaveParameter = isProbationLeave.HasValue ?
                new ObjectParameter("IsProbationLeave", isProbationLeave) :
                new ObjectParameter("IsProbationLeave", typeof(bool));
    
            var isLWPParameter = isLWP.HasValue ?
                new ObjectParameter("IsLWP", isLWP) :
                new ObjectParameter("IsLWP", typeof(bool));
    
            var eLCParameter = eLC.HasValue ?
                new ObjectParameter("ELC", eLC) :
                new ObjectParameter("ELC", typeof(decimal));
    
            var isELCFlagParameter = isELCFlag.HasValue ?
                new ObjectParameter("IsELCFlag", isELCFlag) :
                new ObjectParameter("IsELCFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Leaveapplied_AK_Test", idParameter, emp_idParameter, fkLeaveTypeParameter, departmentParameter, fromDateParameter, toDateParameter, leaveReasonParameter, firstLineManager_idParameter, firstLineManagerStatusParameter, firstLineMangerCommentParameter, secondLineManager_idParameter, secondLineManagerStatusParameter, secondLineManagerCommentParameter, hr_idParameter, hr_CommentParameter, hr_StatusParameter, empLeaveStatusParameter, leaveAppliedDateParameter, createdOnParameter, createdByParameter, updatedOnParameter, updatedByParameter, admin_idParameter, admin_CommentParameter, fLDecisiondateParameter, sLDecisiondateParameter, hRRDecisiondateParameter, isHalfDayParameter, isProbationLeaveParameter, isLWPParameter, eLCParameter, isELCFlagParameter);
        }
    
        public virtual ObjectResult<string> Leaveapplied_bak(Nullable<int> id, string emp_id, Nullable<int> fkLeaveType, string department, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string leaveReason, string firstLineManager_id, Nullable<int> firstLineManagerStatus, string firstLineMangerComment, string secondLineManager_id, Nullable<int> secondLineManagerStatus, string secondLineManagerComment, string hr_id, string hr_Comment, Nullable<int> hr_Status, Nullable<int> empLeaveStatus, Nullable<System.DateTime> leaveAppliedDate, Nullable<System.DateTime> createdOn, string createdBy, Nullable<System.DateTime> updatedOn, string updatedBy, string admin_id, string admin_Comment, Nullable<System.DateTime> fLDecisiondate, Nullable<System.DateTime> sLDecisiondate, Nullable<System.DateTime> hRRDecisiondate, Nullable<bool> isHalfDay, Nullable<bool> isProbationLeave, Nullable<bool> isLWP, Nullable<decimal> eLC, Nullable<bool> isELCFlag)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var emp_idParameter = emp_id != null ?
                new ObjectParameter("Emp_id", emp_id) :
                new ObjectParameter("Emp_id", typeof(string));
    
            var fkLeaveTypeParameter = fkLeaveType.HasValue ?
                new ObjectParameter("fkLeaveType", fkLeaveType) :
                new ObjectParameter("fkLeaveType", typeof(int));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var leaveReasonParameter = leaveReason != null ?
                new ObjectParameter("LeaveReason", leaveReason) :
                new ObjectParameter("LeaveReason", typeof(string));
    
            var firstLineManager_idParameter = firstLineManager_id != null ?
                new ObjectParameter("FirstLineManager_id", firstLineManager_id) :
                new ObjectParameter("FirstLineManager_id", typeof(string));
    
            var firstLineManagerStatusParameter = firstLineManagerStatus.HasValue ?
                new ObjectParameter("FirstLineManagerStatus", firstLineManagerStatus) :
                new ObjectParameter("FirstLineManagerStatus", typeof(int));
    
            var firstLineMangerCommentParameter = firstLineMangerComment != null ?
                new ObjectParameter("FirstLineMangerComment", firstLineMangerComment) :
                new ObjectParameter("FirstLineMangerComment", typeof(string));
    
            var secondLineManager_idParameter = secondLineManager_id != null ?
                new ObjectParameter("SecondLineManager_id", secondLineManager_id) :
                new ObjectParameter("SecondLineManager_id", typeof(string));
    
            var secondLineManagerStatusParameter = secondLineManagerStatus.HasValue ?
                new ObjectParameter("SecondLineManagerStatus", secondLineManagerStatus) :
                new ObjectParameter("SecondLineManagerStatus", typeof(int));
    
            var secondLineManagerCommentParameter = secondLineManagerComment != null ?
                new ObjectParameter("SecondLineManagerComment", secondLineManagerComment) :
                new ObjectParameter("SecondLineManagerComment", typeof(string));
    
            var hr_idParameter = hr_id != null ?
                new ObjectParameter("Hr_id", hr_id) :
                new ObjectParameter("Hr_id", typeof(string));
    
            var hr_CommentParameter = hr_Comment != null ?
                new ObjectParameter("Hr_Comment", hr_Comment) :
                new ObjectParameter("Hr_Comment", typeof(string));
    
            var hr_StatusParameter = hr_Status.HasValue ?
                new ObjectParameter("Hr_Status", hr_Status) :
                new ObjectParameter("Hr_Status", typeof(int));
    
            var empLeaveStatusParameter = empLeaveStatus.HasValue ?
                new ObjectParameter("EmpLeaveStatus", empLeaveStatus) :
                new ObjectParameter("EmpLeaveStatus", typeof(int));
    
            var leaveAppliedDateParameter = leaveAppliedDate.HasValue ?
                new ObjectParameter("LeaveAppliedDate", leaveAppliedDate) :
                new ObjectParameter("LeaveAppliedDate", typeof(System.DateTime));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var admin_idParameter = admin_id != null ?
                new ObjectParameter("Admin_id", admin_id) :
                new ObjectParameter("Admin_id", typeof(string));
    
            var admin_CommentParameter = admin_Comment != null ?
                new ObjectParameter("Admin_Comment", admin_Comment) :
                new ObjectParameter("Admin_Comment", typeof(string));
    
            var fLDecisiondateParameter = fLDecisiondate.HasValue ?
                new ObjectParameter("FLDecisiondate", fLDecisiondate) :
                new ObjectParameter("FLDecisiondate", typeof(System.DateTime));
    
            var sLDecisiondateParameter = sLDecisiondate.HasValue ?
                new ObjectParameter("SLDecisiondate", sLDecisiondate) :
                new ObjectParameter("SLDecisiondate", typeof(System.DateTime));
    
            var hRRDecisiondateParameter = hRRDecisiondate.HasValue ?
                new ObjectParameter("HRRDecisiondate", hRRDecisiondate) :
                new ObjectParameter("HRRDecisiondate", typeof(System.DateTime));
    
            var isHalfDayParameter = isHalfDay.HasValue ?
                new ObjectParameter("IsHalfDay", isHalfDay) :
                new ObjectParameter("IsHalfDay", typeof(bool));
    
            var isProbationLeaveParameter = isProbationLeave.HasValue ?
                new ObjectParameter("IsProbationLeave", isProbationLeave) :
                new ObjectParameter("IsProbationLeave", typeof(bool));
    
            var isLWPParameter = isLWP.HasValue ?
                new ObjectParameter("IsLWP", isLWP) :
                new ObjectParameter("IsLWP", typeof(bool));
    
            var eLCParameter = eLC.HasValue ?
                new ObjectParameter("ELC", eLC) :
                new ObjectParameter("ELC", typeof(decimal));
    
            var isELCFlagParameter = isELCFlag.HasValue ?
                new ObjectParameter("IsELCFlag", isELCFlag) :
                new ObjectParameter("IsELCFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Leaveapplied_bak", idParameter, emp_idParameter, fkLeaveTypeParameter, departmentParameter, fromDateParameter, toDateParameter, leaveReasonParameter, firstLineManager_idParameter, firstLineManagerStatusParameter, firstLineMangerCommentParameter, secondLineManager_idParameter, secondLineManagerStatusParameter, secondLineManagerCommentParameter, hr_idParameter, hr_CommentParameter, hr_StatusParameter, empLeaveStatusParameter, leaveAppliedDateParameter, createdOnParameter, createdByParameter, updatedOnParameter, updatedByParameter, admin_idParameter, admin_CommentParameter, fLDecisiondateParameter, sLDecisiondateParameter, hRRDecisiondateParameter, isHalfDayParameter, isProbationLeaveParameter, isLWPParameter, eLCParameter, isELCFlagParameter);
        }
    
        public virtual ObjectResult<Organogram_Result> Organogram(Nullable<int> dEPT_ID)
        {
            var dEPT_IDParameter = dEPT_ID.HasValue ?
                new ObjectParameter("DEPT_ID", dEPT_ID) :
                new ObjectParameter("DEPT_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Organogram_Result>("Organogram", dEPT_IDParameter);
        }
    
        public virtual int sp_send_mail(string from, string to, string subject, string body, string bodytype, ObjectParameter output_mesg, ObjectParameter output_desc)
        {
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("body", body) :
                new ObjectParameter("body", typeof(string));
    
            var bodytypeParameter = bodytype != null ?
                new ObjectParameter("bodytype", bodytype) :
                new ObjectParameter("bodytype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_send_mail", fromParameter, toParameter, subjectParameter, bodyParameter, bodytypeParameter, output_mesg, output_desc);
        }
    
        public virtual int usp_CalculateBalanceLeaves(Nullable<int> userId, Nullable<System.DateTime> fromdate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CalculateBalanceLeaves", userIdParameter, fromdateParameter);
        }
    
        public virtual int usp_CalculateLeavesTaken(Nullable<int> userId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CalculateLeavesTaken", userIdParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int usp_CalculateLeavesTaken_By_Year(Nullable<int> userId, Nullable<int> fkLeaveType, Nullable<int> lwp)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fkLeaveTypeParameter = fkLeaveType.HasValue ?
                new ObjectParameter("fkLeaveType", fkLeaveType) :
                new ObjectParameter("fkLeaveType", typeof(int));
    
            var lwpParameter = lwp.HasValue ?
                new ObjectParameter("lwp", lwp) :
                new ObjectParameter("lwp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CalculateLeavesTaken_By_Year", userIdParameter, fkLeaveTypeParameter, lwpParameter);
        }
    
        public virtual int usp_CalculateLeavesTaken_ForCoustom_Report(Nullable<int> userId, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CalculateLeavesTaken_ForCoustom_Report", userIdParameter, fromParameter, toParameter);
        }
    
        public virtual int usp_CalculateTotalAssignedLeaves(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CalculateTotalAssignedLeaves", userIdParameter);
        }
    
        public virtual int usp_PrintLeavesMonth(Nullable<int> userId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PrintLeavesMonth", userIdParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int usp_PrintLeavesMonth_AK_Test(Nullable<int> userId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PrintLeavesMonth_AK_Test", userIdParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int usp_PrintLeavesMonth_bak(Nullable<int> userId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PrintLeavesMonth_bak", userIdParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int usp_PrintLeavesMonth_Halfday(Nullable<int> userId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PrintLeavesMonth_Halfday", userIdParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int usp_Total_CalculateLeaves(Nullable<int> userId, Nullable<int> fkLeaveType, Nullable<int> lwp)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fkLeaveTypeParameter = fkLeaveType.HasValue ?
                new ObjectParameter("fkLeaveType", fkLeaveType) :
                new ObjectParameter("fkLeaveType", typeof(int));
    
            var lwpParameter = lwp.HasValue ?
                new ObjectParameter("lwp", lwp) :
                new ObjectParameter("lwp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Total_CalculateLeaves", userIdParameter, fkLeaveTypeParameter, lwpParameter);
        }
    }
}
